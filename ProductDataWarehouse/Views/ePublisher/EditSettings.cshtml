@model PDWModels.eCollateral.ECollateralSettings
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/NewLayout.cshtml";
	ViewBag.HeaderArea = "ePublisher";
}
@using ProductDataWarehouse.Controllers
@using PDWInfrastructure
    <script type="text/javascript">
    	$(document).ready(function () {
			$.data($('#theForm')[0], 'validator').settings.ignore = '.noValidate';

    		$.validator.addMethod(
					"regex",
					function (value, element, regexp) {
						var re = new RegExp(regexp);
						return this.optional(element) || re.test(value);
					},
					"Please check your input."
				);

    		$.validator.addMethod(
					"isunique",
					function (value, element, regexp) {
						return $(element).hasClass('isunique');
					},
					"Please check your input."
				);

    		$('#CustomURL').rules("add", { isunique: true, messages: { required: "URL must be valid and unique in the system."} });
    		$("#DealershipPOCPhone").rules("add", { regex: "^[2-9]\\d{2}-\\d{3}-\\d{4}$", messages: { regex: "Phone Number must be in the format ###-###-####."} });
    		$("#DealershipPOCEmail").rules("add", { regex: "^[A-Za-z0-9](([_\\.\\-\\+]?[a-zA-Z0-9]+)*)@@([A-Za-z0-9]+)(([\\.\\-]?[a-zA-Z0-9]+)*)\\.([A-Za-z]{2,})$", messages: { regex: "Email must be a valid Email Address."} });

    		$('#IsTemplate').on('change', showHideProjectInfo);
    		$('#PaoliSalesRepGroupID').on('change', reloadPaoliSalesRepList);
    		$('#DealershipID').on('change', reloadDealerSalesRepList);
    		$('#DealershipPOCID').on('change', showHideDealerPOC);
			$('#CustomerName').on('change', reloadProjectList);

    		$('.submitBtn').click(function (e) {
    			$('#theForm').submit();
    		});

    		$('#CustomURL').on('keyup', function (e) {
    			ValidateURL($(this).val());
    		});

			showHideProjectInfo();
    		ValidateURL($('#CustomURL').val());
    		reloadPaoliSalesRepList(@(Model.DealershipID ?? 0), @(Model.DealershipPOCID ?? 0), @(Model.ProjectID ?? 0), '@((Model.CustomerName ?? "").Any() ? Model.CustomerName : "")');

			$('.addECBtn').fancybox({
				'autoDimensions': false,
				'width': 972,
				'height': 210,
				'padding': 20,
				'margin': 0,
				'scrolling': 'auto',
				'titleShow': false
			});

			$('.submitNewECBtn').on('click', function() {
				if( $('#NewEndCustomer').val() != '' && $('#NewEndCustomer').val() != null ) {
					$('#CustomerName').append('<option value="' + $('#NewEndCustomer').val() + '">' + $('#NewEndCustomer').val() + '</option>")');
					$('#CustomerName').val($('#NewEndCustomer').val());
					reloadProjectList();
					$('#NewEndCustomer').val('');
					$.fancybox.close();
				}
			});

			$('.cancelNewECBtn').on('click', function() {
				$.fancybox.close();
			});

			$('.addProjBtn').fancybox({
				'autoDimensions': false,
				'width': 972,
				'height': 210,
				'padding': 20,
				'margin': 0,
				'scrolling': 'auto',
				'titleShow': false
			});

			$('.submitNewProjBtn').on('click', function() {
				if( $('#NewProject').val() != '' && $('#NewProject').val() != null ) {
					// add the new project, then reload the list
					makeAjaxCall('/SpecRequest/CreateNewProject',
						{ 
							projectName: $('#NewProject').val(),
							customer: $('#CustomerName').val(),
							dealer: $('#DealershipID').val() 
						}, 
						function(data) {
							reloadProjectList(data.projectId);
							$('#NewProject').val('');
							$.fancybox.close();
						}
					);
				}
			});

			$('.cancelNewProjBtn').on('click', function() {
				$.fancybox.close();
			});
    	});

		function showHideProjectInfo() {
			if ($('#IsTemplate').val() == 'true') {
				$('.projectInfo').hide();
				$('.projectInfo input').addClass('noValidate');
				$('.projectInfo select').addClass('noValidate');
			} else {
				$('.projectInfo').show();
				$('.projectInfo input').removeClass('noValidate');
				$('.projectInfo select').removeClass('noValidate');
			}
			showHideDealerPOC();
		}

    	function ValidateURL(urlValue) {
    		makeAjaxCall('/ePublisher/ValidateURL',
    			{ itemId: @Model.ItemID, url: urlValue },
    			function (data, textStatus, jqXHR) {
    				if (data.success) {
    					$('#isURLOK').removeClass('notavailable');
						$('#CustomURL').addClass('isunique');
    				} else {
    					$('#isURLOK').addClass('notavailable');
						$('#CustomURL').removeClass('isunique');
    				}
    			},
    			function (jqXHR, textStatus, errorThrown) {
    				alert('Error getting Dealer list:' + errorThrown)
    			}
    		);
    	}

    	function emptyDropDownList(ddList) {
			ddList.empty();
    	}

		function reloadDropDownStringList(ddListID, data, bNeedOther) {
    		var ddList = $(ddListID);
    		emptyDropDownList(ddList);
			if( bNeedOther ) {
				ddList.append('<option value=""></option>")');
			}
    		$.each(data.theList, function (idx, item) {
				ddList.append('<option value="' + item + '">' + item + '</option>")');
    		});
    	}

    	function reloadDropDownUserList(ddListID, data, bNeedOther) {
    		var ddList = $(ddListID);
    		emptyDropDownList(ddList);
    		$.each(data.theList, function (idx, item) {
				ddList.append('<option value="' + item.UserID + '">' + item.FullName + '</option>")');
    		});
			if( bNeedOther ) {
				ddList.append('<option value="0">Other</option>")');
			}
    	}

    	function reloadDropDownCompanyList(ddListID, data) {
    		var ddList = $(ddListID);
    		emptyDropDownList(ddList);
    		$.each(data, function (idx, item) {
				ddList.append('<option value="' + item.ID + '">' + item.Text + '</option>")');
    		});
    	}

    	function reloadPaoliSalesRepList(initDealer, initPOC, initProjectID, initECName) {
    		if ($('#PaoliSalesRepGroupID').val() != null && $('#PaoliSalesRepGroupID').val() != '' && $('#PaoliSalesRepGroupID').val() != '0') {
				@if( PDWInfrastructure.PaoliWebUser.CurrentUser.IsDealerUser )
	{
		var thisCompany = ProductDataWarehouse.Controllers.CompanyController.GetThisCompanyAsDDItem( includeTerritory: true );
				<text>
    				emptyDropDownList($('#DealershipID'));
					$('#DealershipID').append('<option value="@(thisCompany.First().Value)">@(thisCompany.First().Text.Replace( "'", "''" ))</option>');

    				reloadDealerSalesRepList(initPOC, initProjectID, initECName);
				</text>
	}
	else
	{
				<text>
    			makeAjaxCall('/Company/GetDealerListForSalesRep',
    				{ salesRepCompanyId: $('#PaoliSalesRepGroupID').val(), includeTerritory: true },
    				function (data, textStatus, jqXHR) {
						reloadDropDownCompanyList('#DealershipID', data);
						if( initDealer != null ) {
							$('#DealershipID').val(initDealer);
						}
    					reloadDealerSalesRepList(initPOC, initProjectID, initECName);
    				},
    				function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Dealer list:' + errorThrown)
    				}
    			);
				</text>
	}

    		} else {
    			emptyDropDownList($('#DealershipID'));
    			emptyDropDownList($("#DealershipPOCID"));
				$('#DealershipPOCName').addClass('noValidate');
				$('.DSRPOCCell').hide();
    		}
		}

    	function reloadDealerSalesRepList(initPOC, initProjectID, initECName) {
    		if ($('#DealershipID').val() != null && $('#DealershipID').val() != '' && $('#DealershipID').val() != '0') {
    			makeAjaxCall('/User/GetDealerSalesRepListForCompany',
    				{ companyId: $('#DealershipID').val(), enabledOnly: true },
    				function (data, textStatus, jqXHR) {
    					reloadDropDownUserList('#DealershipPOCID', data, true);
						if( initPOC != null ) {
							$('#DealershipPOCID').val(initPOC);
						}
						showHideDealerPOC();
    				},
    				function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Dealer Sales Rep list:' + errorThrown)
    				}
    			);

				reloadProjectList(initProjectID);
    		} else {
    			emptyDropDownList($("#DealershipPOCID"));
				$('#DealershipPOCName').addClass('noValidate');
				$('.DSRPOCCell').hide();
    		}
    	}

    	function reloadProjectList(initId) {
    		if ($('#CustomerName').val() != null && $('#CustomerName').val() != '' &&
				$('#DealershipID').val() != null && $('#DealershipID').val() != '' && $('#DealershipID').val() != '0') {
    			makeAjaxCall('/SpecRequest/GetProjectForCustomer',
    				{ customer: $('#CustomerName').val(), dealer: $('#DealershipID').val() },
    				function (data, textStatus, jqXHR) {
						reloadDropDownCompanyList('#ProjectID', data.theList, true);
						if( initId != null ) {
							$('#ProjectID').val(initId);
						}
    					$('.ProjectCell').show();
    				},
    				function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Project list:' + errorThrown)
    				}
    			);
    		} else {
				emptyDropDownList($("#ProjectID"));
    			$('.ProjectCell').hide();
    		}
    	}

		function showHideDealerPOC() {
    		if ($('#DealershipPOCID').val() == '0' && $('#IsTemplate').val().toLowerCase() == 'false') {
    			$('.DSRPOCCell').show();
				$('#DealershipPOCName').removeClass('noValidate');
   			} else {
    			$('.DSRPOCCell').hide();
 				$('#DealershipPOCName').addClass('noValidate');
   			}
		}

	</script>
@{
	CompanyController.GetCompanyListFunction GetSalesRepList = CompanyController.GetCompanyDDList;
	if( PaoliWebUser.CurrentUser.IsInRole( PaoliWebUser.PaoliWebRole.PaoliSalesRep ) )
	{
		GetSalesRepList = CompanyController.GetThisCompanyAsDDItem;
	}
	else if( PaoliWebUser.CurrentUser.IsDealerUser )
	{
		GetSalesRepList = CompanyController.GetSalesRepForDealerDDItem;
		Model.PaoliSalesRepGroupID = Convert.ToInt32( CompanyController.GetSalesRepForDealerDDItem().First().Value );
	}
	var isTemplateList = new List<SelectListItem>() { new SelectListItem() { Text = "No", Value = "false" } };
	if( PaoliWebUser.CurrentUser.CanAddECTemplate )
	{
		isTemplateList.Add( new SelectListItem() { Text = "Yes", Value = "true" } );
	}
}

<div class="content">
	<div class="boxes settingpage">
		<h1 class="aligncenter">Alright! Let’s get started creating<br/> your new ePublisher page!</h1>
        
             
        <h2>Collateral Info</h2>
        

		@using( Html.BeginForm( "EditSettings", "ePublisher", FormMethod.Post, new { id = "theForm", name = "theForm", enctype = "multipart/form-data", @class = "form" } ) )
  {
			@Html.AntiForgeryToken()
			@Html.HiddenFor( m => m.ItemID )
			<div class="filesettinglist">
			@if( PaoliWebUser.CurrentUser.CanAddECTemplate )
   {
                <label for="template">Is Template?</label>
                @Html.DropDownListFor( m => m.IsTemplate, isTemplateList )
                <div class="clr"></div>
   }
   else
   {
	   @Html.HiddenFor( m => m.IsTemplate )
   }            
                <label for="FileName">Page Name</label>
                @Html.TextBoxFor( m => m.FileName )
                <em>Every page created by ePublisher must have a unique name. You will use this name to search and find it in the future.</em>
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.FileName )
                <div class="clr"></div>
                
                <label for="CustomURL">Custom URL</label>
                @Html.TextBoxFor( m => m.CustomURL )
                <em>Custom URL must be unique and can only include letters, numbers, hyphens (-) or underscores (_).  No other special characters are permitted.
				<i id="isURLOK">URL Available</i>
				</em>
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.CustomURL )
                <div class="clr"></div>
                 
                 
                 <br/><br/>
                 <h2 class="projectInfo">Who is this for?</h2>

				@if( PaoliWebUser.CurrentUser.IsPaoliUser )
	{
				<div class="projectInfo">
                <label for="PaoliSalesRepGroupID">Sales Rep Territory</label>
                @Html.DropDownListFor( m => m.PaoliSalesRepGroupID, GetSalesRepList( PDWInfrastructure.PaoliWebUser.PaoliCompanyType.PaoliRepGroup, includeTerritory: true ) )
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.PaoliSalesRepGroupID )
                <div class="clr"></div>
				</div>
	}
	else
	{
		@Html.HiddenFor( m => m.PaoliSalesRepGroupID )
	}                
                
				<div class="projectInfo">
                <label for="DealershipID">Dealership</label>
                @Html.DropDownListFor( m => m.DealershipID, new List<SelectListItem>() )
                <em>Select your dealership from the drop down</em>
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.DealershipID )
                <div class="clr"></div>
				</div>
                
                
				<div class="projectInfo">
                <label for="DealershipPOCID">Dealership Point of Contact</label>
                @Html.DropDownListFor( m => m.DealershipPOCID, new List<SelectListItem>() )
                <em>Select your dealership point of contact from the drop down</em>
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.DealershipPOCID )
                <div class="clr"></div>
				</div>

                
				<div class="DSRPOCCell">
                <label for="CustomerName">Name</label>
                @Html.TextBoxFor( m => m.DealershipPOCName )
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.DealershipPOCName )
                <div class="clr"></div>
				</div>

                
				<div class="DSRPOCCell">
                <label for="CustomerName">Email</label>
                @Html.TextBoxFor( m => m.DealershipPOCEmail )
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.DealershipPOCEmail )
                <div class="clr"></div>
				</div>

                
				<div class="DSRPOCCell">
                <label for="CustomerName">Phone</label>
                @Html.TextBoxFor( m => m.DealershipPOCPhone )
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.DealershipPOCPhone )
                <div class="clr"></div>
				</div>

                
				<div class="DSRPOCCell">
                <label for="CustomerName">User Type</label>
                @Html.DropDownListFor( m => m.DealershipPOCAcctType, UserController.GetDealerUserRoleDDList() )
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.DealershipPOCAcctType )
                <div class="clr"></div>
				</div>

                
				<div class="projectInfo">
                <div class="EndCustomerCell">
				<div class="">
                <label for="CustomerName">Customer Name</label>
                @Html.DropDownListFor( m => m.CustomerName, ProjectController.GetFullEndCustomerList() )<a class="btn7 addECBtn" style="margin-top:inherit;" href="#newEndCustomer">+</a>
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.CustomerName )
                <div class="clr"></div>
				</div>
                <div class="ProjectCell">
                <label for="ProjectName">Project Name</label>
                @Html.DropDownListFor( m => m.ProjectID, new List<SelectListItem>() )<a class="btn7 addProjBtn" style="margin-top:inherit;" href="#newProject">+</a>
                <div class="clr"></div>
				@Html.ValidationMessageFor( m => m.ProjectID )
                <div class="clr"></div>
				</div>
				</div>
				</div>

                <div class="clr"></div>
                
                
                
            </div>
  }
        
    </div>
</div>
<footer class="mainfooter">
	<div class="leftdiv"><a href="@Url.Action( "Manage", "ePublisher" )" class="cancelBtn">Cancel</a></div>
    <div class="rightdiv"><a href="javascript:void(0);" class="publish submitBtn">Save and Continue</a></div>
</footer>


	 <div style="display:none">
	<div id="newEndCustomer" class="needRowPadding">
		<div class="main_inner2_btm"> 
    	<h2 class="bold">Add End Customer</h2>
			<div class="main_inner2_btm_mid_myacct">
				<ul>
        			<li>
            			<div class="colmn1">Customer Name</div>
						<div class="colmn3single"><input class="msg2" id="NewEndCustomer" name="NewEndCustomer" /></div>
					</li>
				</ul>
			</div>
			<div class="clear"></div>
			<span class="btn7 cancelNewECBtn">CANCEL</span> <span class="btn8 submitNewECBtn">SAVE</span> 
		</div>
	</div>

	<div id="newProject" class="needRowPadding">
		<div class="main_inner2_btm"> 
    	<h2 class="bold">Add Project</h2>
			<div class="main_inner2_btm_mid_myacct">
				<ul>
        			<li>
            			<div class="colmn1">Project Name</div>
						<div class="colmn3single"><input class="msg2" id="NewProject" name="NewProject" /></div>
					</li>
				</ul>
			</div>
			<div class="clear"></div>
			<span class="btn7 cancelNewProjBtn">CANCEL</span> <span class="btn8 submitNewProjBtn">SAVE</span> 
		</div>
	</div>

	 </div>