@model PDWModels.Companies.CompanyInformation
@{
	ViewBag.Title = "Edit Company";
	ViewBag.CurrentPage = "Users";
	ViewBag.CurrentSubPage = "Companies";
	Layout = "~/Views/Shared/HeaderLayout.cshtml";
}
@using ProductDataWarehouse.Models
@using ProductDataWarehouse.Controllers

<link href="@Url.Content( "~/Content/jquery.tagit.css" )" rel="stylesheet" type="text/css" />
<script src="@Url.Content( "~/Scripts/tag-it.js" )" type="text/javascript"></script>

    <script type="text/javascript">
    	$(document).ready(function () {
			@if( Model.LockCompanyType )
   {
			<text>
			$('select#CompanyType').attr('disabled', 'disabled');
			</text>
   }

    		showHideTerritoryID( @(Model.PaoliSalesRepMemberID.HasValue ? Model.PaoliSalesRepMemberID.Value.ToString() : "null") );
			showHidePaoliSalesRepList( @(Model.PaoliSalesRepMemberID.HasValue ? Model.PaoliSalesRepMemberID.Value.ToString() : "null") );
			showHideTripGroup();

    		$('#CompanyType').change(function () {
    			showHideTerritoryID();
    		});

    		$('#TerritoryID').change(function () {
    			showHidePaoliSalesRepList();
    		});

    		showHideShowrooms();

    		$('#HasShowroom').change(function () {
    			showHideShowrooms();
    		});

    		$('input[name="SignedUpForTrip"]').click(function () {
    			showHideTripGroup();
    		});

@{var currentImages = "'" + string.Join("','", (Model.ShowroomImages ?? "").Split(',')) + "'";}
			var returnedImages = [@Html.Raw(currentImages)];
    		$('#ShowroomImages').tagit({
    			allowSpaces: true,
    			beforeTagAdded: function (event, ui) {
    				// do something special
					var isValid = false;
					$.each(returnedImages, function(idx, i) {
						if (i.toLowerCase() == ui.tagLabel.toLowerCase()) {
							isValid = true;
							return false; // break the loop
						}
					});
					return isValid;
    			},
    			autocomplete: ({
    				source: function (request, response) {
    					makeAjaxCall('@Url.Action( "GetTypeaheadImageList", "PDW" )',
    						{ format: "json", query: request.term, max: 15 },
    						function (data) {
								returnedImages = data;
    							response($.map(data, function (item) {
    								return {
    									label: item,
    									value: item
    								}
    							}));
    						},
    						function (request, status, error) {
    							alert(error);
								returnedImages = [];
    						}
						);
    				},
    				minLength: 2
    			})
    		});
    	});

    	function showHideTerritoryID(psrMemberId) {
			if( $.inArray($('#CompanyType').val(), ['@Html.Raw( string.Join( "','", PDWInfrastructure.PaoliWebUser.PaoliCompanyType.HasTerritory ) )'] ) != -1 ) {
				$('#territoryRow').show();
			} else {
				$('#territoryRow').hide();
			}

			showHidePaoliSalesRepList(psrMemberId);
    	}

		function showHidePaoliSalesRepList(psrMemberId) {
			if( $.inArray($('#CompanyType').val(), ['@Html.Raw(string.Join("','", PDWInfrastructure.PaoliWebUser.PaoliCompanyType.HasTerritory))'] ) != -1 ) {
				if( $('#CompanyType').val() == @PDWInfrastructure.PaoliWebUser.PaoliCompanyType.Dealer ) {
					$('.dealerRow').show();
					reloadPaoliSalesRepList(psrMemberId);
				} else {
					$('.dealerRow').hide();
				}
			} else {
				$('.dealerRow').hide();
			}
		}

    	function showHideShowrooms() {
    		if ($('#HasShowroom:checked').length > 0) {
    			$('.showRoomRow').show();
    		} else {
    			$('.showRoomRow').hide();
    		}
    	}

    	function showHideTripGroup() {
    		if ($('#SignedUpForTrip:checked').val() == 'True') {
    			$('.tripGroupRow').show();
    		} else {
    			$('.tripGroupRow').hide();
    		}
    	}

    	function reloadPaoliSalesRepList(psrMemberId) {
    		if ($('#TerritoryID option:selected').text() != '') {
    			makeAjaxCall('/User/GetPaoliSalesRepListForTerritory',
    				{ territoryID: $('#TerritoryID').val(), enabledOnly: false },
    				function (data, textStatus, jqXHR) {
    					$('#PaoliSalesRepMemberID').empty();
    					$.each(data.theList, function (idx, item) {
							if( item != null ) {
	    						$('#PaoliSalesRepMemberID').append('<option value="' + item.UserID + '" ' + (item.UserID == psrMemberId ? 'selected ' : ' ') + '>' + item.FullName + '</option>');
							} else {
    							$('#PaoliSalesRepMemberID').append('<option ' + (null == psrMemberId ? 'selected ' : ' ') + '></option>');
							}
    					});
    				},
    				function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Paoli Sales Rep list:' + errorThrown)
    				}
    			);
     		} else {
    			$('#PaoliSalesRepMemberID').empty();
    		}
	   	}

    </script>    

    <h2>Edit Company</h2>

    @using( Html.BeginForm( "Edit", "Company", FormMethod.Post, new { id = "theForm", name = "TheForm", enctype = "multipart/form-data" } ) )
	{
		@Html.AntiForgeryToken()
		@Html.HiddenFor( m => m.CompanyID )
		if( Model.LockCompanyType )
		{
			@Html.HiddenFor( m => m.CompanyType )
		}
		<table cellpadding="0" cellspacing="0" class="dataLayout">
		<tr>
		<td class="padr30 padl30" colspan="4"><hr /></td>
		</tr>

		<tr>
		<td  colspan="4"><h3>Official Company Information</h3></td>
		</tr>
        <tr>
		<td style="padding-bottom:13px;">@Html.MJLabelFor( m => m.CompanyID, true )</td><td>@Html.DisplayFor( m => m.CompanyID )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.Name, true )</td><td>@Html.TextBoxFor( m => m.Name, new { tabindex = 1 } )</td>
		</tr>
		<tr>
		<td>@Html.MJLabelFor( m => m.Address1, true )</td><td>@Html.TextBoxFor( m => m.Address1, new { tabindex = 2 } )</td>
		<td>@Html.MJLabelFor( m => m.Phone, true )</td><td>@Html.TextBoxFor( m => m.Phone, new { tabindex = 7 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.Address2, true )</td><td>@Html.TextBoxFor( m => m.Address2, new { tabindex = 3 } )</td>
		<td>@Html.MJLabelFor( m => m.FAX, true )</td><td>@Html.TextBoxFor( m => m.FAX, new { tabindex = 8 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.City, true )</td><td>@Html.TextBoxFor( m => m.City, new { tabindex = 4 } )</td>
		<td>@Html.MJLabelFor( m => m.ContactEmail, true )</td><td>@Html.TextBoxFor( m => m.ContactEmail, new { tabindex = 9 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.State, true )</td><td>@Html.DropDownListFor( m => m.State, UserController.GetStateDDList(), new { tabindex = 5 } )</td>
		<td>@Html.MJLabelFor( m => m.WebSite, true )</td><td>@Html.TextBoxFor( m => m.WebSite, new { tabindex = 10 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.Zip, true )</td><td>@Html.TextBoxFor( m => m.Zip, new { tabindex = 6 } )</td>
		</tr>
		<tr>
		<td>@Html.MJLabelFor( m => m.ImageFileName, true )</td><td><input type="file" id="CompanyImage" name="CompanyImage" accept=".jpg,.png,.gif,.bmp" /></td>
		<td colspan="2">@if( Model.ImageFileName != null )
				  { @Html.HiddenFor( m => m.ImageFileName ) <img style="max-width:450px;max-height:175px;" src="/Images/@Model.ImageFileName" /> }</td>
		</tr>
		
		<tr><td class="padr30 padl30" colspan="4"><hr /></td></tr>
		<tr>
		<td  colspan="4"><h3>Account Information</h3></td>
		</tr>
        
		<tr>
		<td>@Html.MJLabelFor( m => m.CompanyType, true )</td><td>@Html.DropDownListFor( m => m.CompanyType, CompanyController.GetCompanyTypeDDList(), new { tabindex = 11 } )</td>
		<td class="territoryRow">@Html.MJLabelFor( m => m.TerritoryID, true )</td><td class="territoryRow">@Html.DropDownListFor( m => m.TerritoryID, CompanyController.GetTerritoryDDList( true ), new { tabindex = 20 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.MasterID, true )</td><td>@Html.TextBoxFor( m => m.MasterID, new { tabindex = 12 } )</td>
		<td class="territoryRow">@Html.MJLabelFor( m => m.PaoliMemberID, true )</td><td class="territoryRow">@Html.DropDownListFor( m => m.PaoliMemberID, UserController.GetPaoliMemberDDListForCompany( true ), new { tabindex = 21 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.SubCompanyIDs, true )</td><td>@Html.TextBoxFor( m => m.SubCompanyIDs, new { tabindex = 13 } )</td>
		<td class="dealerRow">@Html.MJLabelFor( m => m.PaoliSalesRepMemberID, true )</td><td class="dealerRow">@Html.DropDownListFor( m => m.PaoliSalesRepMemberID, UserController.GetPaoliMemberDDListForCompany( true ), new { tabindex = 22 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.BusinessUnitName, true )</td><td>@Html.TextBoxFor( m => m.BusinessUnitName, new { tabindex = 14 } )</td>
		</tr>
        <tr class="dealerRow">
		<td style="height:31px;">@Html.MJLabelFor( m => m.SignedUpForTrip, true )</td><td>@Html.RadioButtonFor( m => m.SignedUpForTrip, true, new { tabindex = 16 } ) Yes @Html.RadioButtonFor( m => m.SignedUpForTrip, false, new { tabindex = 17 } ) No </td>
		<td class="tripGroupRow">@Html.MJLabelFor( m => m.TripGroup, true )</td><td class="tripGroupRow">@Html.DropDownListFor( m => m.TripGroup, CompanyController.GetTripGroupDDList(), new { tabindex = 18 } )</td>
		</tr>
        <tr class="dealerRow">
		<td>@Html.MJLabelFor( m => m.TierGroup, true )</td><td>@Html.DropDownListFor( m => m.TierGroup, UserController.GetTierGroupDDList(), new { tabindex = 19 } )</td>
		</tr>

		<tr><td class="padr30 padl30" colspan="4"><hr /></td></tr>
		<tr>
		<td  colspan="4"><h3>Paoli.com Public Profile Information</h3></td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.PublicDisplayName, true )</td><td>@Html.TextBoxFor( m => m.PublicDisplayName, new { tabindex = 23 } )</td>
		</tr>
		<tr>
		<td>@Html.MJLabelFor( m => m.PublicAddress1, true )</td><td>@Html.TextBoxFor( m => m.PublicAddress1, new { tabindex = 24 } )</td>
		<td>@Html.MJLabelFor( m => m.PublicPhone, true )</td><td>@Html.TextBoxFor( m => m.PublicPhone, new { tabindex = 29 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.PublicAddress2, true )</td><td>@Html.TextBoxFor( m => m.PublicAddress2, new { tabindex = 25 } )</td>
		<td>@Html.MJLabelFor( m => m.PublicFAX, true )</td><td>@Html.TextBoxFor( m => m.PublicFAX, new { tabindex = 30 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.PublicCity, true )</td><td>@Html.TextBoxFor( m => m.PublicCity, new { tabindex = 26 } )</td>
		<td>@Html.MJLabelFor( m => m.PublicContactEmail, true )</td><td>@Html.TextBoxFor( m => m.PublicContactEmail, new { tabindex = 31 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.PublicState, true )</td><td>@Html.DropDownListFor( m => m.PublicState, UserController.GetStateDDList(), new { tabindex = 27 } )</td>
		<td>@Html.MJLabelFor( m => m.PublicWebSite, true )</td><td>@Html.TextBoxFor( m => m.PublicWebSite, new { tabindex = 32 } )</td>
		</tr>
        <tr>
		<td>@Html.MJLabelFor( m => m.PublicZip, true )</td><td>@Html.TextBoxFor( m => m.PublicZip, new { tabindex = 28 } )</td>
		</tr>

        <tr>
		<td>@Html.MJLabelFor( m => m.HasShowroom, true )</td><td>@Html.CheckBoxFor( m => m.HasShowroom, new { tabindex = 33 } )</td>
		</tr>
		<tr class="showRoomRow"><td class="padr30 padl30" colspan="4"><hr /></td></tr>
		<tr class="showRoomRow">
		<td  colspan="4"><h3>Showroom Information</h3></td>
		</tr>
        <tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomDisplayName, true )</td><td>@Html.TextBoxFor( m => m.ShowroomDisplayName, new { tabindex = 34 } )</td>
		</tr>
		<tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomAddress1, true )</td><td>@Html.TextBoxFor( m => m.ShowroomAddress1, new { tabindex = 35 } )</td>
		<td>@Html.MJLabelFor( m => m.ShowroomDescription, true )</td>
		</tr>
        <tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomAddress2, true )</td><td>@Html.TextBoxFor( m => m.ShowroomAddress2, new { tabindex = 36 } )</td>
		<td rowspan="3" colspan="2">@Html.TextAreaFor( m => m.ShowroomDescription, new { tabindex = 43 } )</td>
		</tr>
        <tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomCity, true )</td><td>@Html.TextBoxFor( m => m.ShowroomCity, new { tabindex = 37 } )</td>
		</tr>
        <tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomState, true )</td><td>@Html.DropDownListFor( m => m.ShowroomState, UserController.GetStateDDList(), new { tabindex = 38 } )</td>
		</tr>
        <tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomZip, true )</td><td>@Html.TextBoxFor( m => m.ShowroomZip, new { tabindex = 39 } )</td>
		<td>@Html.MJLabelFor( m => m.ShowroomHours, true )</td>
		</tr>
		<tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomPhone, true )</td><td>@Html.TextBoxFor( m => m.ShowroomPhone, new { tabindex = 40 } )</td>
		<td rowspan="3" colspan="2">@Html.TextAreaFor( m => m.ShowroomHours, new { tabindex = 44 } )</td>
		</tr>
		<tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomFAX, true )</td><td>@Html.TextBoxFor( m => m.ShowroomFAX, new { tabindex = 41 } )</td>
		</tr>
		<tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomWebsite, true )</td><td>@Html.TextBoxFor( m => m.ShowroomWebsite, new { tabindex = 42 } )</td>
		</tr>
		<tr class="showRoomRow">
		<td>@Html.MJLabelFor( m => m.ShowroomImages, true )</td><td>@Html.TextBoxFor( m => m.ShowroomImages, new { style = "display:none" } )</td>
		</tr>
		</table>
@Html.ValidationSummary()
        <input type="submit" class="btn_type1" value="Save Changes" id="submitBtn" />
	}
	<div class="clear"></div>
<div>
<br /><hr />
<h3>Specification Requests</h3>
    <table id="specRequestList">
    <thead></thead>
    <tfoot></tfoot>
    </table>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		loadSpecRequests();
	});

	var srTable = null;
	function loadSpecRequests() {
		if (srTable != null) {
			srTable.fnDraw();
			return;
		}

		srTable = $('#specRequestList').dataTable({
			"bServerSide": true,
			"bAutoWidth": false,
			"bFilter": false,
			"bLengthChange": false, // don't show dropdown for #items per page
			"bPaginate": true,
			"bInfo": true,
			"sAjaxSource": '@Url.Action( "FullRequestList", "SpecRequest" )',
			"fnServerParams": function (aoData) {
				aoData.push({ "name": "companyId", "value": @Model.CompanyID });
			},
			"iDisplayLength": 100,
			"oLanguage": {
				"sSearch": "Filter by Keyword:"
			},
			"fnServerData": function (sSource, aoData, fnCallback) {
				makeAjaxCall(sSource,
					aoData,
					function (data, textStatus, jqXHR) {
						fnCallback(data, textStatus, jqXHR);
					},
					function (jqXHR, textStatus, errorThrown) { alert('Error getting list of Requests:' + errorThrown) }
				);
			},
			"bProcessing": false, // don't want to use the default progress indicator at this time
			"aaSorting": [[0, "desc"]],
			"aoColumnDefs": [
					{ "sName": "EditButtons",
						"sTitle": "Name",
						"aTargets": [0],
						"mDataProp": "EditButtons", "sWidth": "8%",
						"fnRender": function (oObj) {
							if (oObj.aData["IsCanceled"] || oObj.aData["IsCompleted"]) {
								return '<a href=\"@Url.Action( "ViewRequest", "SpecRequest" )/' + oObj.aData["RequestID"] + '\">' + oObj.aData["Name"] + '</a>';
							}
							return '<a href=\"@Url.Action( "EditRequest", "SpecRequest" )/' + oObj.aData["RequestID"] + '\">' + oObj.aData["Name"] + '</a>';
						}
					},
                    { "sName": "Dealer", "sTitle": "Dealer", "aTargets": [1], "mDataProp": "Dealer", "sWidth": "17%" },
                    { "sName": "ProjectName", "sTitle": "Project Name", "aTargets": [2], "mDataProp": "ProjectName", "sWidth": "16%" },
                    { "sName": "SalesRepGroup", "sTitle": "Rep Group", "aTargets": [3], "mDataProp": "SalesRepGroup", "sWidth": "17%" },
                    { "sName": "SpecTeamMember", "sTitle": "Member", "aTargets": [4], "mDataProp": "SpecTeamMember", "sWidth": "10%" },
                    { "sName": "CreatedDate", "sTitle": "Created", "aTargets": [5], "mDataProp": "CreatedDate", "sWidth": "9%",
                    	"fnRender": function (oObj) {
                    		if (oObj.aData["CreatedDate"] != null) {
                    			var milli = oObj.aData["CreatedDate"].replace(/\/Date\((-?\d+)\)\//, '$1');
                    			return getLocalDate(parseInt(milli));
                    		}
                    		return '';
                    	}
                    },
                    { "sName": "Status",
                    	"aTargets": [6],
                    	"bSearchable": false,
                    	"bSortable": false,
                    	"mDataProp": "Status", "sTitle": "Status", "sWidth": "10%",
                    	"fnRender": function (oObj) {
                    		if (oObj.aData["IsCanceled"]) {
                    			return 'Canceled';
                    		} else if (oObj.aData["IsCompleted"]) {
                    			return 'Completed';
                    		} else if (oObj.aData["SpecTeamMember"] == null || oObj.aData["SpecTeamMember"] == '') {
                    			return 'Not Assigned';
                    		} else if (oObj.aData["IsAuditSpecOnly"]) {
                    			return 'Pending - Spec Audit Check';
                    		}
                    		return 'Pending';
                    	}
                    },
                    { "sName": "TypicalFinder",
                    	"aTargets": [7],
                    	"bSearchable": false,
                    	"bSortable": false,
                    	"mDataProp": "TypicalFinder", "sTitle": "Typical Finder", "sWidth": "13%",
                    	"fnRender": function (oObj) {
                    		if (oObj.aData["IsPublished"]) {
                    			return '<a href=\"@Url.Action( "EditTypical", "SpecRequest" )/' + oObj.aData["RequestID"] + '/\" class="fbImageBtn">Published</a>';
                    		} else if (oObj.aData["IsCompleted"] && !oObj.aData["IsCanceled"]) {
                    			if (oObj.aData["HasTypical"]) {
                    				return '<a href=\"@Url.Action( "EditTypical", "SpecRequest" )/' + oObj.aData["RequestID"] + '/\" class="fbImageBtn">Recommended</a>';
                    			} else if (oObj.aData["IsRecommended"]) {
                    				return '<a href=\"@Url.Action( "AddTypical", "SpecRequest" )/' + oObj.aData["RequestID"] + '/\" class="fbImageBtn">Recommended</a>';
                    			} else {
                    				return 'Not recommended';
                    			}
                    		}
                    		return '';
                    	}
                    }
                ]
		});
	}

</script>

	<div class="clear"></div>
<div>
<br /><hr />
<h3>Collateral Orders</h3>
    <table id="orderList">
    <thead></thead>
    <tfoot></tfoot>
    </table>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		loadOrders();
	});

	var oTable = null;
	function loadOrders() {
		if (oTable != null) {
			oTable.fnDraw();
			return;
		}

		oTable = $('#orderList').dataTable({
			"bServerSide": true,
			"bAutoWidth": false,
			"bFilter": false,
			"bLengthChange": false, // don't show dropdown for #items per page
			"bPaginate": true,
			"bInfo": true,
			"sAjaxSource": '@Url.Action( "FullCollateralOrderList", "Collateral" )',
			"fnServerParams": function (aoData) {
				aoData.push({ "name": "companyId", "value": @Model.CompanyID });
			},
			"iDisplayLength": 100,
			"fnServerData": function (sSource, aoData, fnCallback) {
				makeAjaxCall(sSource,
					aoData,
					function (data, textStatus, jqXHR) {
						fnCallback(data, textStatus, jqXHR);
					},
					function (jqXHR, textStatus, errorThrown) { alert('Error getting list of Orders:' + errorThrown) }
				);
			},
			"bProcessing": false, // don't want to use the default progress indicator at this time
			"aaSorting": [[0, "desc"]],
			"aoColumnDefs": [
                    { "sName": "EditButtons",
                    	"aTargets": [0],
                    	"sTitle": "Order Number",
                    	"mDataProp": "EditButtons", "sWidth": "8%",
                    	"fnRender": function (oObj) {
                    		var s = '';
                    		if (oObj.aData["CanEdit"]) {
                    			s += '<a href=\"@Url.Action( "EditOrder", "Collateral" )/' + oObj.aData["OrderID"] + '">' + oObj.aData["OrderID"] + '</a>';
                    		} else {
                    			s += oObj.aData["OrderID"];
                    		}
                    		return s;
                    	}
                    },
                    { "sName": "RequestingParty", "sTitle": "Requested By", "aTargets": [1], "mDataProp": "RequestingParty", "sWidth": "36%" },
                    { "sName": "ShippingParty", "sTitle": "Requested For", "aTargets": [2], "mDataProp": "ShippingParty", "sWidth": "36%" },
                    { "sName": "OrderDate", "sTitle": "Order Date", "aTargets": [3], "mDataProp": "OrderDate",
                    	"fnRender": function (oObj) {
                    		return getLocalDate(oObj.aData["OrderDateMilliseconds"]);
                    	}, "sWidth": "10%"
                    },
                    { "sName": "Status", "sTitle": "Status", "aTargets": [4], "mDataProp": "Status", "sWidth": "10%",
                    	"fnRender": function (oObj) {
                    		var s = '';
                    		s += '<a href=\"@Url.Action( "ShipOrder", "Collateral" )/' + oObj.aData["OrderID"] + '">' + oObj.aData["Status"] + '</a>';
                    		if (oObj.aData["IsOvernight"]) {
                    			s += ' <img src="@Url.Content( "~/Content/images/SeriousWarning.png" )" />';
                    		}
                    		return s;
                    	}
                    }
                ]
		});
	}

</script>

	<div class="clear"></div>
<div>
<br /><hr />
<h3>Users</h3>
    <table id="userList">
    <thead></thead>
    <tfoot></tfoot>
    </table>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		loadUsers();
	});

	var uTable = null;
	function loadUsers() {
		if (uTable != null) {
			uTable.fnDraw();
			return;
		}

		uTable = $('#userList').dataTable({
			"bServerSide": true,
			"bAutoWidth": false,
			"bFilter": false,
			"bLengthChange": false, // don't show dropdown for #items per page
			"bPaginate": true,
			"bInfo": true,
			"sAjaxSource": '@Url.Action( "FullUserList", "User" )',
			"fnServerParams": function (aoData) {
				aoData.push({ "name": "companyId", "value": @Model.CompanyID });
			},
			"iDisplayLength": 100,
			"fnServerData": function (sSource, aoData, fnCallback) {
				makeAjaxCall(sSource,
					aoData,
					function (data, textStatus, jqXHR) {
						fnCallback(data, textStatus, jqXHR);
					},
					function (jqXHR, textStatus, errorThrown) { alert('Error getting list of Users:' + errorThrown) }
				);
			},
			"bProcessing": false, // don't want to use the default progress indicator at this time
			"aaSorting": [[1, "asc"]],
			"aoColumnDefs": [
                    { "sName": "FirstName", "sTitle": "First Name", "aTargets": [0], "mDataProp": "FirstName", "sWidth": "15%",
                    	"fnRender": function (oObj) {
                    		var s = '';
                    		if (!oObj.aData["Enabled"]) {
                    			s += '<span style="text-decoration:line-through">';
                    		}
                    		s += oObj.aData["FirstName"];
                    		if (!oObj.aData["Enabled"]) {
                    			s += '</span>';
                    		}
                    		return s;
                    	}
                    },
                    { "sName": "LastName", "sTitle": "Last Name", "aTargets": [1], "mDataProp": "LastName", "sWidth": "15%",
                    	"fnRender": function (oObj) {
                    		var s = '';
                    		if (!oObj.aData["Enabled"]) {
                    			s += '<span style="text-decoration:line-through">';
                    		}
                    		s += oObj.aData["LastName"];
                    		if (!oObj.aData["Enabled"]) {
                    			s += '</span>';
                    		}
                    		return s;
                    	}
                    },
                    { "sName": "EmailAddress", "sTitle": "Email Address", "aTargets": [2], "mDataProp": "EmailAddress", "sWidth": "20%" },
                    { "sName": "CompanyName", "sTitle": "Company Name", "aTargets": [3], "mDataProp": "CompanyName", "sWidth": "20%" },
                    { "sName": "LastLogin", "sTitle": "Last Login", "aTargets": [4], "mDataProp": "LastLogin",
                    	"fnRender": function (oObj) {
                    		return getDateTimeFromMilliseconds(oObj.aData["LastLoginMilliseconds"]);
                    	}, "sWidth": "10%"
                    },
                    { "sName": "EditButtons",
                    	"aTargets": [5],
                    	"bSearchable": false,
                    	"bSortable": false,
                    	"mDataProp": "EditButtons", "sWidth": "20%",
                    	"fnRender": function (oObj) {
                    		var s;
                    		s = '<a href=\"@Url.Action( "Edit", "User" )/' + oObj.aData["UserID"] + '" class="fbImageBtn">Edit</a>';
                    		if (oObj.aData["SentWelcomeEmail"] && oObj.aData["Enabled"]) {
                    			s += '&nbsp;|&nbsp;';
                    			s += '<a href=\"#\" onclick="resetPassword(' + oObj.aData["UserID"] + ');">Reset Password</a>';
                    		} else if (!oObj.aData["SentWelcomeEmail"]) {
                    			s += '&nbsp;|&nbsp;';
                    			s += '<a href=\"#\" onclick="sendWelcomeEmail(' + oObj.aData["UserID"] + ');">Send Welcome Email</a>';
                    		}
                    		return s;
                    	}
                    }
                ]
		});
	}

</script>