@model PDWModels.Collateral.NewOrderInformation
@{
    ViewBag.Title = "NewAddOrder";
    Layout = "~/Views/Shared/NewLayout.cshtml";
	ViewBag.HeaderArea = "<h2><img src=\"/newcontent/images/store_img.png\" alt=\"img\" height=\"55\" width=\"46\"> Collateral Store</h2>";
}
@using ProductDataWarehouse.Models
@using ProductDataWarehouse.Controllers
@using PDWInfrastructure

    <script type="text/javascript">
    	$(document).ready(function () {
    		$.data($('#theForm')[0], 'validator').settings.ignore = ':hidden';
    		$.validator.addMethod(
					"atLeastOneItem",
					function (value, element, regexp) {
						var itemCount = 0;
						$('.quantityInput').each(function () {
							itemCount += $(this).val();
						});
						return (itemCount > 0);
					},
					"Please add at least one item to your order."
				);
    		$.validator.addMethod(
					"regex",
					function (value, element, regexp) {
						var re = new RegExp(regexp);
						return this.optional(element) || re.test(value);
					},
					"Please check your input."
				);

//    		$('.quantityInput').last().rules("add", { atLeastOneItem: true, messages: { number: 'Please add at least one item to your order.'} });
    		$('#PaoliMemberID').rules("add", { required: true, messages: { required: "Paoli Member is required."} });
    		$('#PaoliRepGroupID').rules("add", { required: true, messages: { required: "Paoli Rep Group is required."} });
    		$('#DealerID').rules("add", { required: true, messages: { required: "Dealership Name is required."} });
    		$('#SPPaoliMemberID').rules("add", { required: true, messages: { required: "Paoli Member is required."} });
    		$('#SPPaoliRepGroupID').rules("add", { required: true, messages: { required: "Paoli Rep Group is required."} });
    		$('#SPDealerID').rules("add", { required: true, messages: { required: "Dealership Name is required."} });
//    		$("#tb1ShippingZip").rules("add", { regex: "^\\d{5}(-\\d{4})?$", messages: { regex: "Zip Code must be in the format ##### or #####-####."} });
//    		$("#tb1ShippingPhoneNumber").rules("add", { regex: "^[2-9]\\d{2}-\\d{3}-\\d{4}$", messages: { regex: "Phone Number must be in the format ###-###-####."} });
//    		$("#tb1ShippingEmailAddress").rules("add", { regex: "^[A-Za-z0-9](([_\\.\\-\\+]?[a-zA-Z0-9]+)*)@@([A-Za-z0-9]+)(([\\.\\-]?[a-zA-Z0-9]+)*)\\.([A-Za-z]{2,})$", messages: { regex: "Email must be a valid Email Address."} });
//    		$("#tb2ShippingZip").rules("add", { regex: "^\\d{5}(-\\d{4})?$", messages: { regex: "Zip Code must be in the format ##### or #####-####."} });
//    		$("#tb2ShippingPhoneNumber").rules("add", { regex: "^[2-9]\\d{2}-\\d{3}-\\d{4}$", messages: { regex: "Phone Number must be in the format ###-###-####."} });
//    		$("#tb2ShippingEmailAddress").rules("add", { regex: "^[A-Za-z0-9](([_\\.\\-\\+]?[a-zA-Z0-9]+)*)@@([A-Za-z0-9]+)(([\\.\\-]?[a-zA-Z0-9]+)*)\\.([A-Za-z]{2,})$", messages: { regex: "Email must be a valid Email Address."} });
//    		$('#ShippingFedexAccount').rules("add", { required: true, messages: { required: "Fedex Account Number is required."} });
			
			$('#RequestingParty').msDropdown({ on: { change: setRPDetails} });			$('#PaoliMemberID').msDropdown();			$('#PaoliRepGroupID').msDropdown({ visibleRows: 15, on: { change: function () {
    			loadSPDealerList();
				loadSPRepGroupList();
    			reloadPaoliSalesRepList();
    		}} });			$('#PaoliRepGroupMemberID').msDropdown({ visibleRows: 15 });			$('#DealerID').msDropdown({ visibleRows: 15, on: { change: function () {
    			loadSPDealerList();
    			reloadDealerSalesRepList();
    		}} });			$('#DealerMemberID').msDropdown({ visibleRows: 15 });			$('#ShippingParty').msDropdown({ visibleRows: 15, on: { change: setSPDetails} });			$('#SPPaoliMemberID').msDropdown({ visibleRows: 15 });			$('#SPPaoliRepGroupID').msDropdown({ visibleRows: 15, on: { change: reloadSPPaoliSalesRepList} });			$('#SPPaoliRepGroupMemberID').msDropdown({ visibleRows: 15 });			$('#SPDealerID').msDropdown({ visibleRows: 15, on: { change: reloadSPDealerSalesRepList} });			$('#SPDealerMemberID').msDropdown({ visibleRows: 15 });
    		$('.nextBtn').click(function (e) {
    			e.preventDefault();
    			$('.validation-summary-errors ul').empty();
    			if ($('#theForm').valid()) {
    				setPanel(1);

    				if ($('#ShippingType').closest('.requestPanel').hasClass('activeSection')) {
    					$('#ShippingAddressType[value="0"]').removeAttr('disabled');
    					$('#ShippingAddressType[value="1"]').attr('checked', 'checked');

    					setCompanyDetails();
    				}
    			}
    		});

    		$('.previousBtn').click(function (e) {
    			e.preventDefault();
    			setPanel(-1);
    		});

    		$('.cancelBtn').click(function (e) {
    			window.location.href = '@Url.Action( "Orders" )';
    		});

    		setRPDetails();
    		setSPDetails();

    		changeShippingType();
    		$('#ShippingType').change(function (e) {
    			changeShippingType();
    		});

    		$('input:radio[name=ShippingAddressType]').click(function (e) {
    			setCompanyDetails();
    		});

			@if( PaoliWebUser.CurrentUser.IsInRole( PaoliWebUser.PaoliWebRole.PaoliSalesRep ) )
			{
			<text>
			reloadPaoliSalesRepList();
			reloadSPPaoliSalesRepList();
			</text>
			}
			else if( PaoliWebUser.CurrentUser.IsDealerUser )
			{
			<text>
			reloadDealerSalesRepList();
			</text>
			}
    	});

    	function changeShippingType() {
    		switch ($('#ShippingType').val()) {
    			case '@PDWModels.Collateral.NewOrderInformation.STGround':
    				$('.fedexAccount').hide();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.ST2DayFedex':
    				$('.fedexAccount').show();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.STOvernightFedex':
    				$('.fedexAccount').show();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.STStdOvernightFedex':
    				$('.fedexAccount').show();
    				break;

    		}
    	}

    	function setCompanyDetails() {
    		var officialUserID = null, officialCompanyID = null;
    		switch ($('#ShippingParty').val()) {
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliMember':
    				if ($('#SPPaoliMemberID').val() != null && $('#SPPaoliMemberID').val() != '0' && $('#SPPaoliMemberID').val() != '') {
    					officialUserID = $('#SPPaoliMemberID').val();
    				}
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative':
    				if ($('#SPPaoliRepGroupMemberID').val() != null && $('#SPPaoliRepGroupMemberID').val() != '0' && $('#SPPaoliRepGroupMemberID').val() != '') {
    					officialUserID = $('#SPPaoliRepGroupMemberID').val();
    					officialCompanyID = $('#SPPaoliRepGroupID').val();
    				} else if ($('#SPPaoliRepGroupID').val() != null && $('#SPPaoliRepGroupID').val() != '0' && $('#SPPaoliRepGroupID').val() != '') {
    					officialUserID = null;
    					officialCompanyID = $('#SPPaoliRepGroupID').val();
    				}
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPDealer':
    				if ($('#SPDealerMemberID').val() != null && $('#SPDealerMemberID').val() != '0' && $('#SPDealerMemberID').val() != '') {
    					officialUserID = $('#SPDealerMemberID').val();
    					officialCompanyID = $('#SPDealerID').val();
    				} else if ($('#SPDealerID').val() != null && $('#SPDealerID').val() != '0' && $('#SPDealerID').val() != '') {
    					officialUserID = null;
    					officialCompanyID = $('#SPDealerID').val();
    				}
    				break;
    		}
    		if (officialCompanyID != null || officialUserID != null) {
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/Company/GetShippingAddress',
    				data: { companyId: officialCompanyID, userId: officialUserID },
    				success: function (data, textStatus, jqXHR) {
    					$('#tb1ShippingCompanyName').val(data.Name);
    					$('#tb1ShippingAttn').val(data.ContactAttn);
    					$('#tb1ShippingAddress1').val(data.Address1);
    					$('#tb1ShippingAddress2').val(data.Address2);
    					$('#tb1ShippingCity').val(data.City);
    					$('#tb1ShippingState').val(data.State);
    					$('#tb1ShippingZip').val(data.Zip);
    					$('#tb1ShippingPhoneNumber').val(data.Phone);
    					$('#tb1ShippingEmailAddress').val(data.ContactEmail);

    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Company Address:' + errorThrown)
    				}
    			});
    		}
   			if (officialCompanyID == null && officialUserID == null) {
    			$('#ShippingAddressType[value="0"]').attr('disabled', true);
			}
			if ($('input:radio[name=ShippingAddressType]:checked').val() == '1') {
				$('.currentAddress').attr('disabled', 'disabled');
				$('.newAddress').removeAttr('disabled');
			} else {
				$('.newAddress').attr('disabled', 'disabled');
				$('.currentAddress').removeAttr('disabled');
			}
    	}

    	function setRPDetails() {
    		$('#ShippingParty option').removeAttr('disabled');
    		switch ($('#RequestingParty').msDropdown().data("dd").get('value')) {
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliMember':
    				$('.RPMember').show();
    				$('.RPRepGroup').hide();
    				$('.RPDealer').hide();
    				$('.RPEndUser').hide();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative':
    				$('.RPMember').hide();
    				$('.RPRepGroup').show();
    				$('.RPDealer').hide();
    				$('.RPEndUser').hide();
    				$('#ShippingParty option[value=@PDWModels.Collateral.NewOrderInformation.RPPaoliMember]').attr('disabled', 'disabled');
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPDealer':
    				$('.RPMember').hide();
    				$('.RPRepGroup').hide();
    				$('.RPDealer').show();
    				$('.RPEndUser').hide();
    				$('#ShippingParty option[value=@PDWModels.Collateral.NewOrderInformation.RPPaoliMember]').attr('disabled', 'disabled');
    				$('#ShippingParty option[value=@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative]').attr('disabled', 'disabled');
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPEndUser':
    				$('.RPMember').hide();
    				$('.RPRepGroup').hide();
    				$('.RPDealer').hide();
    				$('.RPEndUser').show();
    				$('#ShippingParty option[value=@PDWModels.Collateral.NewOrderInformation.RPPaoliMember]').attr('disabled', 'disabled');
    				$('#ShippingParty option[value=@PDWModels.Collateral.NewOrderInformation.RPDealer]').attr('disabled', 'disabled');
    				$('#ShippingParty option[value=@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative]').attr('disabled', 'disabled');
    				break;
    		}
    		$('#ShippingParty').msDropdown().data("dd").set('value', Math.max($('#ShippingParty').msDropdown().data("dd").get('value'), $('#RequestingParty').msDropdown().data("dd").get('value')));
    		setSPDetails();
    	}

    	function setSPDetails() {
    		switch ($('#ShippingParty').msDropdown().data("dd").get('value')) {
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliMember':
    				$('.SPMember').show();
    				$('.SPRepGroup').hide();
    				$('.SPDealer').hide();
    				$('.SPEndUser').hide();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative':
    				$('.SPMember').hide();
    				$('.SPRepGroup').show();
    				$('.SPDealer').hide();
    				$('.SPEndUser').hide();
					loadSPRepGroupList();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPDealer':
    				$('.SPMember').hide();
    				$('.SPRepGroup').hide();
    				$('.SPDealer').show();
    				$('.SPEndUser').hide();
    				loadSPDealerList();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPEndUser':
    				$('.SPMember').hide();
    				$('.SPRepGroup').hide();
    				$('.SPDealer').hide();
    				$('.SPEndUser').show();
    				break;
    		}
    	}

    	function setPanel(offset) {
    		var curIdx = $('#theForm div.activeSection').index('#theForm div.requestPanel');
    		var divCount = $('#theForm div.requestPanel').length;
    		//console.log('setPanel [' + offset + '][' + curIdx + '][' + divCount + ']');
    		if (offset == -1 && curIdx > 0) {
    			$('.activeSection').removeClass('activeSection').addClass('futureSection');
    			$('#theForm div.requestPanel:eq(' + (curIdx + offset) + ')').removeClass('futureSection').addClass('activeSection');
    			if (curIdx + offset > 0) {
    				$('.previousBtn').show();
    			} else {
    				$('.previousBtn').hide();
    			}
    			$('.nextBtn').show();
    			$('.submitBtn').hide();
    		} else if (offset == 1 && curIdx < (divCount - 1)) {
    			$('.activeSection').removeClass('activeSection').addClass('futureSection');
    			$('#theForm div.requestPanel:eq(' + (curIdx + offset) + ')').removeClass('futureSection').addClass('activeSection');
    			if (curIdx + offset < (divCount - 1)) {
    				$('.nextBtn').show();
    			} else {
    				$('.nextBtn').hide();
    				$('.submitBtn').show();
    				fillConfirmForm();
    			}
    			$('.previousBtn').show();
    		}
    	}
		
		function emptyDropDownList(ddList) {
			while( ddList.length > 0 ) {
				ddList.remove(0);
			}
		}

		function reloadDropDownUserList(ddListID, data) {
			var ddList = $(ddListID).msDropdown().data("dd");
			emptyDropDownList(ddList);
    		$.each(data.theList, function (idx, item) {
				ddList.add({text:item.FullName, value:item.UserID});
    		});
		}

		function reloadDropDownCompanyList(ddListID, data) {
			var ddList = $(ddListID).msDropdown().data("dd");
			emptyDropDownList(ddList);
    		$.each(data.theList, function (idx, item) {
				ddList.add({text:item.Text, value:item.ID});
    		});
		}

		function setDropDownListToMatch(ddListID, ddSourceID) {
			var ddList = $(ddListID).msDropdown().data("dd");
			emptyDropDownList(ddList);
			var ddSource = $(ddSourceID).msDropdown().data("dd");
			ddList.add({text:ddSource.get('selectedText'), value:ddSource.get('value')});
			ddList.set('value', ddSource.get('value'));
		}

		function loadSPDealerList() {
			var theUrl = '/Company/GetDealerList';
			var dataSet = { includeBlank: 'true' };
			if ($('.RPRepGroup:hidden').length == 0) {
				// rep group is showing - only load dealers for the group
				theUrl = '/Company/GetDealerListForSalesRep';
				dataSet = { salesRepCompanyId: $('#PaoliRepGroupID').msDropdown().data("dd").get('value'), includeBlank: 'true' };
				if ($('#PaoliRepGroupID option:selected').text() == '') {
					emptyDropDownList('#SPDealerID');
					reloadSPDealerSalesRepList();
					return;
				}
			} else if ($('.RPDealer:hidden').length == 0) {
				setDropDownListToMatch('#SPDealerID', '#DealerID');
				reloadSPDealerSalesRepList();
				return;
			}

			$.ajax({
				dataType: 'json',
				type: 'GET',
				url: theUrl,
				data: dataSet,
				success: function (data, textStatus, jqXHR) {
					reloadDropDownCompanyList('#SPDealerID', data);
					reloadSPDealerSalesRepList();
				},
				error: function (jqXHR, textStatus, errorThrown) {
					alert('Error getting Dealer list:' + errorThrown)
				}
			});
		}

		function loadSPRepGroupList() {
			var theUrl = '/Company/GetPaoliRepGroupList';
			var dataSet = { includeBlank: 'true' };
			if ($('.RPRepGroup:hidden').length == 0) {
				// rep group is showing - only load that group
				setDropDownListToMatch('#SPPaoliRepGroupID', '#PaoliRepGroupID');
				reloadSPPaoliSalesRepList();
				return;
			}

			$.ajax({
				dataType: 'json',
				type: 'GET',
				url: theUrl,
				data: dataSet,
				success: function (data, textStatus, jqXHR) {
					reloadDropDownCompanyList('#SPPaoliRepGroupID', data);
					reloadSPPaoliSalesRepList();
				},
				error: function (jqXHR, textStatus, errorThrown) {
					alert('Error getting Rep Group list:' + errorThrown)
				}
			});
		}

		function reloadDealerSalesRepList() {
			if ($('#DealerID option:selected').text() != '') {
				$.ajax({
					dataType: 'json',
					type: 'GET',
					url: '/User/GetDealerSalesRepListForCompany',
					data: { companyId: $('#DealerID').msDropdown().data("dd").get('value'), enabledOnly: true },
					success: function (data, textStatus, jqXHR) {
						reloadDropDownUserList('#DealerMemberID', data);
					},
					error: function (jqXHR, textStatus, errorThrown) {
						alert('Error getting Dealer Sales Rep list:' + errorThrown)
					}
				});
			} else {
				emptyDropDownList($("#DealerMemberID").msDropdown().data("dd"));
			}
    	}

    	function reloadPaoliSalesRepList() {
    		$.ajax({
    			dataType: 'json',
    			type: 'GET',
    			url: '/User/GetPaoliSalesRepListForCompany',
    			data: { companyId: $('#PaoliRepGroupID').msDropdown().data("dd").get('value'), enabledOnly: true },
    			success: function (data, textStatus, jqXHR) {
					reloadDropDownUserList('#PaoliRepGroupMemberID', data);
    			},
    			error: function (jqXHR, textStatus, errorThrown) {
    				alert('Error getting Paoli Sales Rep list:' + errorThrown)
    			}
    		});
    	}

    	function reloadSPDealerSalesRepList() {
    		if ($('#SPDealerID option:selected').text() != '') {
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/User/GetDealerSalesRepListForCompany',
    				data: { companyId: $('#SPDealerID').msDropdown().data("dd").get('value'), enabledOnly: true },
    				success: function (data, textStatus, jqXHR) {
    					reloadDropDownUserList('#SPDealerMemberID', data);
    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting SP Dealer Sales Rep list:' + errorThrown)
    				}
    			});
    		} else {
				emptyDropDownList($("#SPDealerMemberID").msDropdown().data("dd"));
    		}
    	}

    	function reloadSPPaoliSalesRepList() {
    		if ($('#SPPaoliRepGroupID option:selected').text() != '') {
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/User/GetPaoliSalesRepListForCompany',
    				data: { companyId: $('#SPPaoliRepGroupID').msDropdown().data("dd").get('value'), enabledOnly: true },
    				success: function (data, textStatus, jqXHR) {
    					reloadDropDownUserList('#SPPaoliRepGroupMemberID', data);
    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting SP Paoli Sales Rep list:' + errorThrown)
    				}
    			});
    		} else {
    			emptyDropDownList($("#SPPaoliRepGroupMemberID").msDropdown().data("dd"));
    		}
    	}

		function fillConfirmForm() {
			var t = $('#confirmTable tbody');
			t.empty();

			addConfirmHeaderRow(t, 'Who\'s Requesting');
			addConfirmRow(t, '@Html.MJLabelFor( m => m.RequestingParty, false )', $('#RequestingParty option:selected').text());
			switch ($('#RequestingParty').val()) {
				case '@PDWModels.Collateral.NewOrderInformation.RPPaoliMember':
					addConfirmRow(t, '@Html.MJLabelFor(m => m.PaoliMemberID, true)', $('#PaoliMemberID option:selected').text());
					break;
				case '@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative':
					addConfirmRow(t, '@Html.MJLabelFor(m => m.PaoliRepGroupID, true)', $('#PaoliRepGroupID option:selected').text());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.PaoliRepGroupMemberID, true)', $('#PaoliRepGroupMemberID option:selected').text());
					break;
				case '@PDWModels.Collateral.NewOrderInformation.RPDealer':
					addConfirmRow(t, '@Html.MJLabelFor(m => m.DealerID, true)', $('#DealerID option:selected').text());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.DealerMemberID, true)', $('#DealerMemberID option:selected').text());
					break;
				case '@PDWModels.Collateral.NewOrderInformation.RPEndUser':
					addConfirmRow(t, '@Html.MJLabelFor(m => m.EndUserFirstName, true)', $('#EndUserFirstName').val());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.EndUserLastName, true)', $('#EndUserLastName').val());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.EndUserPhoneNumber, true)', $('#EndUserPhoneNumber').val());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.EndUserEMailAddress, true)', $('#EndUserEMailAddress').val());
					break;
			}
			addConfirmRow(t, '&nbsp;', '&nbsp;');
			addConfirmRow(t, '@Html.MJLabelFor( m => m.ShippingParty, false )', $('#ShippingParty option:selected').text());
			switch ($('#ShippingParty').val()) {
				case '@PDWModels.Collateral.NewOrderInformation.RPPaoliMember':
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPPaoliMemberID, true)', $('#SPPaoliMemberID option:selected').text());
					break;
				case '@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative':
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPPaoliRepGroupID, true)', $('#SPPaoliRepGroupID option:selected').text());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPPaoliRepGroupMemberID, true)', $('#SPPaoliRepGroupMemberID option:selected').text());
					break;
				case '@PDWModels.Collateral.NewOrderInformation.RPDealer':
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPDealerID, true)', $('#SPDealerID option:selected').text());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPDealerMemberID, true)', $('#SPDealerMemberID option:selected').text());
					break;
				case '@PDWModels.Collateral.NewOrderInformation.RPEndUser':
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPEndUserFirstName, true)', $('#SPEndUserFirstName').val());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPEndUserLastName, true)', $('#SPEndUserLastName').val());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPEndUserPhoneNumber, true)', $('#SPEndUserPhoneNumber').val());
					addConfirmRow(t, '@Html.MJLabelFor(m => m.SPEndUserEMailAddress, true)', $('#SPEndUserEMailAddress').val());
					break;
			}

			addConfirmHeaderRow(t, 'Order Details');
			$.each($('.quantityInput'), function () {
				if (parseInt($(this).val()) > 0) {
					var itemRow = $(this).closest('td');
					var itemName = itemRow.prev().find('.justItemName').text();
					addConfirmRow(t, itemName, $(this).val());
				}
			});

			addConfirmHeaderRow(t, 'Shipping Information');
			addConfirmRow(t, '@Html.MJLabelFor( m => m.ShippingType, false )', $('#ShippingType option:selected').text());
			switch ($('#ShippingType').val()) {
				case '@PDWModels.Collateral.NewOrderInformation.STGround':
					break;
				case '@PDWModels.Collateral.NewOrderInformation.ST2DayFedex':
				case '@PDWModels.Collateral.NewOrderInformation.STOvernightFedex':
				case '@PDWModels.Collateral.NewOrderInformation.STStdOvernightFedex':
					addConfirmRow(t, '@Html.MJLabelFor( m => m.ShippingFedexAccount, false )', $('#ShippingFedexAccount').val());
					break;
			}
			addConfirmRow(t, '&nbsp;', '&nbsp;');
			var shippingType = 'tb1';
			if ($('input:radio[name=ShippingAddressType]:checked').val() == '1') {
				shippingType = 'tb2';
			}

			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingAttn )', $('#' + shippingType + 'ShippingAttn').val());
			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingCompanyName )', $('#' + shippingType + 'ShippingCompanyName').val());
			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingAddress1 )', $('#' + shippingType + 'ShippingAddress1').val());
			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingAddress2 )', $('#' + shippingType + 'ShippingAddress2').val());
			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingCity )', $('#' + shippingType + 'ShippingCity').val());
			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingState )', $('#' + shippingType + 'ShippingState').val());
			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingZip )', $('#' + shippingType + 'ShippingZip').val());
			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingPhoneNumber )', $('#' + shippingType + 'ShippingPhoneNumber').val());
			addConfirmRow(t, '@Html.LabelFor( m => m.ShippingEmailAddress )', $('#' + shippingType + 'ShippingEmailAddress').val());
		}

		function addConfirmHeaderRow(table, label) {
			table.append('<tr><td colspan="2"><hr/><h4>' + label + '</h4></td></tr>');
		}

		function addConfirmRow(table, label, text) {
			table.append('<tr><td>' + label + '</td><td>' + text + '</td></tr>');
		}


	</script>
@{
	var collTypeList = CollateralController.GetCollateralTypeFilterList().Where( c => Model.OrderDetails.Any( od => od.CollateralTypeID.ToString() == c.Value ) ).OrderBy( c => int.Parse( c.Value ) );
	var stepCount = collTypeList.Where( i => i.Value != "0" ).Count() + 3;
	var stepNum = 1;
	CompanyController.GetCompanyListFunction GetSalesRepList = CompanyController.GetCompanyDDList;
	CompanyController.GetCompanyListFunction GetDealerList = CompanyController.GetCompanyDDList;
	if( PaoliWebUser.CurrentUser.IsInRole( PaoliWebUser.PaoliWebRole.PaoliSalesRep ) )
	{
		GetSalesRepList = CompanyController.GetThisCompanyAsDDItem;
		GetDealerList = CompanyController.GetDealerForSalesRepDDList;
	}
	else if( PaoliWebUser.CurrentUser.IsDealerUser )
	{
		GetDealerList = CompanyController.GetThisCompanyAsDDItem;
	}
}
    @using( Html.BeginForm( "AddOrder", "Collateral", FormMethod.Post, new { id = "theForm", name = "theForm", enctype = "multipart/form-data" } ) )
	{
		@Html.AntiForgeryToken()
		@Html.Hidden( "Status", PDWModels.Collateral.NewOrderInformation.SPending )

<div class="main_inner1 activeSection requestPanel">
	<h3>
		Step 1: Who’s Requesting?</h3>
	<div class="main_inner1_btm">
		<h4>
			Requestor Information</h4>
		<ul>
			<li>
				<div class="box1">
					@Html.MJLabelFor( m => m.RequestingParty, false )
					@Html.DropDownListFor( m => m.RequestingParty, CollateralController.GetPartyListForUser() )
				</div>
			</li>
			<li>
				<div class="box1 RPMember">
					@Html.MJLabelFor( m => m.PaoliMemberID, false )
					@Html.DropDownListFor( m => m.PaoliMemberID, UserController.GetPaoliMemberDDList( true ) )
				</div>
				<div class="box1 RPRepGroup">
					@Html.MJLabelFor( m => m.PaoliRepGroupID, false )
					@Html.DropDownListFor( m => m.PaoliRepGroupID, GetSalesRepList( PDWInfrastructure.PaoliWebUser.PaoliCompanyType.PaoliRepGroup, true ) )
					@Html.MJCiteFor( m => m.PaoliRepGroupMemberID, false )
					@Html.DropDownListFor( m => m.PaoliRepGroupMemberID, new List<SelectListItem>() )
				</div>
				<div class="box1 RPDealer">
					@Html.MJLabelFor( m => m.DealerID, false )
					@Html.DropDownListFor( m => m.DealerID, GetDealerList( PDWInfrastructure.PaoliWebUser.PaoliCompanyType.Dealer, true ) )
					@Html.MJCiteFor( m => m.DealerMemberID, false )
					@Html.DropDownListFor( m => m.DealerMemberID, new List<SelectListItem>() )
				</div>
				<div class="box1 RPEndUser">
					@Html.MJLabelFor( m => m.EndUserFirstName, false )
					@Html.TextBoxFor( m => m.EndUserFirstName )
					@Html.MJCiteFor( m => m.EndUserLastName, false )
					@Html.TextBoxFor( m => m.EndUserLastName )
				</div>
				<div class="box1 RPEndUser">
					@Html.MJLabelFor( m => m.EndUserPhoneNumber, false )
					@Html.TextBoxFor( m => m.EndUserPhoneNumber )
					@Html.MJCiteFor( m => m.EndUserEMailAddress, false )
					@Html.TextBoxFor( m => m.EndUserEMailAddress )
				</div>
			</li>
		</ul>
		<i class="clear_0"></i>
	</div>
	<div class="main_inner1_btm last">
		<h5>
			Recipient Information</h5>
		<ul>
			<li>
				<div class="box1">
					@Html.MJLabelFor( m => m.ShippingParty, false )
					@Html.DropDownListFor( m => m.ShippingParty, CollateralController.GetPartyListForUser() )
				</div>
			</li>
			<li>
				<div class="box1 SPMember">
					@Html.MJLabelFor( m => m.SPPaoliMemberID, false )
					@Html.DropDownListFor( m => m.SPPaoliMemberID, UserController.GetPaoliMemberDDList( true ) )
				</div>
				<div class="box1 SPRepGroup">
					@Html.MJLabelFor( m => m.SPPaoliRepGroupID, false )
					@Html.DropDownListFor( m => m.SPPaoliRepGroupID, GetSalesRepList( PDWInfrastructure.PaoliWebUser.PaoliCompanyType.PaoliRepGroup, true ) )
					@Html.MJCiteFor( m => m.SPPaoliRepGroupMemberID, false )
					@Html.DropDownListFor( m => m.SPPaoliRepGroupMemberID, new List<SelectListItem>() )
				</div>
				<div class="box1 SPDealer">
					@Html.MJLabelFor( m => m.SPDealerID, false )
					@Html.DropDownListFor( m => m.SPDealerID, GetDealerList( PDWInfrastructure.PaoliWebUser.PaoliCompanyType.Dealer, true ) )
					@Html.MJCiteFor( m => m.SPDealerMemberID, false )
					@Html.DropDownListFor( m => m.SPDealerMemberID, new List<SelectListItem>() )
				</div>
				<div class="box1 SPEndUser">
					@Html.MJLabelFor( m => m.SPEndUserFirstName, false )
					@Html.TextBoxFor( m => m.SPEndUserFirstName )
					@Html.MJCiteFor( m => m.SPEndUserLastName, false )
					@Html.TextBoxFor( m => m.SPEndUserLastName )
				</div>
				<div class="box1 RPEndUser">
					@Html.MJLabelFor( m => m.SPEndUserPhoneNumber, false )
					@Html.TextBoxFor( m => m.SPEndUserPhoneNumber )
					@Html.MJCiteFor( m => m.SPEndUserEMailAddress, false )
					@Html.TextBoxFor( m => m.SPEndUserEMailAddress )
				</div>
			</li>
		</ul>
		<i class="clear_0"></i>
	</div>
</div>
<span class="btn7 cancelBtn">CANCEL</span>
<span class="btn8 submitBtn" style="display:none;">SUBMIT</span>
<span class="btn8 nextBtn">NEXT</span>
<span class="btn9 previousBtn" style="display:none;">PREV</span>
	}