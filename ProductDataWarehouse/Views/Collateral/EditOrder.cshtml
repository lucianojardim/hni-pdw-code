@model PDWModels.Collateral.NewOrderInformation
@{
	ViewBag.Title = "Edit Collateral Order";
	ViewBag.CurrentPage = "Database";
	ViewBag.CurrentSubPage = "Collateral";
	Layout = "~/Views/Shared/HeaderLayout.cshtml";
}
@using ProductDataWarehouse.Models
@using ProductDataWarehouse.Controllers

    <script type="text/javascript">
    	var fileCount = 1;
    	$(document).ready(function () {
			@if( Model.OrderDate.HasValue ) {
			<text>
                var cDate = new Date('@Model.OrderDate.Value.ToString()');
                var offset = new Date().getTimezoneOffset();
                cDate.setMinutes(cDate.getMinutes() - offset);
                $('#orderDate').text((cDate.getMonth() + 1) + '/' + cDate.getDate() + '/' + cDate.getFullYear());
			</text>
			}

    		$.data($('#theForm')[0], 'validator').settings.ignore = ':hidden';
    		$.validator.addMethod(
					"atLeastOneItem",
					function (value, element, regexp) {
						var itemCount = 0;
						$('.quantityInput').each(function () {
							itemCount += $(this).val();
						});
						return (itemCount > 0);
					},
					"Please add at least one item to your order."
				);

    		$('.quantityInput').last().rules("add", { atLeastOneItem: true, messages: { number: 'Please add at least one item to your order.'} });

    		setRPDetails(true);
    		$('#RequestingParty').change(function (e) {
    			setRPDetails(false);
    		});

    		changeShippingType();
    		$('#ShippingType').change(function (e) {
    			changeShippingType();
    		});

    		$('#ShippingAddressType').change(function (e) {
    			switch ($(this).val()) {
    				case '0':
    					setCompanyDetails();
    					break;
    				case '1':
    					$('#ShippingCompanyName').removeAttr('readonly').val(null);
    					$('#ShippingAttn').removeAttr('readonly').val(null);
    					$('#ShippingAddress1').removeAttr('readonly').val(null);
    					$('#ShippingAddress2').removeAttr('readonly').val(null);
    					$('#ShippingCity').removeAttr('readonly').val(null);
    					$('#ShippingState').val(null);
    					$('#ShippingState option:not(:selected)').removeAttr('disabled');
    					$('#ShippingZip').removeAttr('readonly').val(null);
    					$('#ShippingPhoneNumber').removeAttr('readonly').val(null);
    					$('#ShippingEmailAddress').removeAttr('readonly').val(null);
    					break;
    			}
    		});

    		reloadDealerSalesRepList(@(Model.DealerMemberID.HasValue ? Model.DealerMemberID.Value.ToString() : "null"), true);
    		$('#DealerID').change(function () {
    			reloadDealerSalesRepList(null, false);
    		});

    		$('#PaoliRepGroupID').change(function () {
    			reloadPaoliSalesRepList(null, false);
    		});

    		$('#PaoliRepGroupMemberID').change(function () {
    			setCompanyDetails();
    		});

    		$('#DealerMemberID').change(function () {
    			setCompanyDetails();
    		});
 
    		$('#PaoliMemberID').change(function () {
    			setCompanyDetails();
    		});

			@if( Model.ShippingAddressType == 0 )
			{
			<text>
    			$('#ShippingCompanyName').attr('readonly', 'readonly');
    			$('#ShippingAttn').attr('readonly', 'readonly');
    			$('#ShippingAddress1').attr('readonly', 'readonly');
    			$('#ShippingAddress2').attr('readonly', 'readonly');
    			$('#ShippingCity').attr('readonly', 'readonly');
    			$('#ShippingState option:not(:selected)').attr('disabled', true);
    			$('#ShippingZip').attr('readonly', 'readonly');
    			$('#ShippingPhoneNumber').attr('readonly', 'readonly');
    			$('#ShippingEmailAddress').attr('readonly', 'readonly');
			</text>
			}
    	});

    	function changeShippingType() {
    		switch ($('#ShippingType').val()) {
    			case '@PDWModels.Collateral.NewOrderInformation.STGround':
    				$('.fedexAccount').hide();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.ST2DayFedex':
    				$('.fedexAccount').show();
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.STOvernightFedex':
    				$('.fedexAccount').show();
    				break;

    		}
    	}

    	function setCompanyDetails() {
			if ($('#ShippingAddressType').val() != '0') {
				return;
			}
    		var officialUserID = null, officialCompanyID = null;

    		switch ($('#RequestingParty').val()) {
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliMember':
    				officialUserID = $('#PaoliMemberID').val();
    				//break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative':
    				if ($('#PaoliRepGroupMemberID').val() != null && $('#PaoliRepGroupMemberID').val() != '0') {
    					officialUserID = $('#PaoliRepGroupMemberID').val();
    					officialCompanyID = $('#PaoliRepGroupID').val();
    				} else if ($('#PaoliRepGroupID').val() != null && $('#PaoliRepGroupID').val() != '0') {
						officialUserID = null;
    					officialCompanyID = $('#PaoliRepGroupID').val();
    				}
    				//break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPDealer':
    				if ($('#DealerMemberID').val() != null && $('#DealerMemberID').val() != '0') {
    					officialUserID = $('#DealerMemberID').val();
    					officialCompanyID = $('#DealerID').val();
    				} else if ($('#DealerID').val() != null && $('#DealerID').val() != '0') {
						officialUserID = null;
    					officialCompanyID = $('#DealerID').val();
    				}
					//break;
    		}
    		$.ajax({
    			dataType: 'json',
    			type: 'GET',
    			url: '/Company/GetShippingAddress',
    			data: { companyId: officialCompanyID, userId: officialUserID },
    			success: function (data, textStatus, jqXHR) {
    				$('#ShippingCompanyName').attr('readonly', 'readonly').val(data.Name);
    				$('#ShippingAttn').attr('readonly', 'readonly').val(data.ContactAttn);
    				$('#ShippingAddress1').attr('readonly', 'readonly').val(data.Address1);
    				$('#ShippingAddress2').attr('readonly', 'readonly').val(data.Address2);
    				$('#ShippingCity').attr('readonly', 'readonly').val(data.City);
    				$('#ShippingState').val(data.State);
    				$('#ShippingState option:not(:selected)').attr('disabled', true);
    				$('#ShippingZip').attr('readonly', 'readonly').val(data.Zip);
    				$('#ShippingPhoneNumber').attr('readonly', 'readonly').val(data.Phone);
    				$('#ShippingEmailAddress').attr('readonly', 'readonly').val(data.ContactEmail);

    			},
    			error: function (jqXHR, textStatus, errorThrown) {
    				alert('Error getting Company Address:' + errorThrown)
    			}
    		});

    	}

    	function setRPDetails(bInit) {
    		switch ($('#RequestingParty').val()) {
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliMember':
    				$('.RPMember').show();
    				$('.RPRepGroup').show();
    				$('.RPDealer').show();
    				$('.RPEndUser').hide();
    				if (!bInit) {
    					$('#ShippingAddressType option[value="0"]').removeAttr('disabled');
						loadPaoliRepGroupList(true);
   						//setCompanyDetails();
    				} else {
			    		reloadPaoliSalesRepList(@(Model.PaoliRepGroupMemberID.HasValue ? Model.PaoliRepGroupMemberID.Value.ToString() : "null"), true);
						loadDealerList(true, @(Model.DealerID.HasValue ? Model.DealerID.Value.ToString() : "null"), 
							@(Model.DealerMemberID.HasValue ? Model.DealerMemberID.Value.ToString() : "null"));
					}
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPPaoliRepresentative':
    				$('.RPMember').hide();
    				$('.RPRepGroup').show();
    				$('.RPDealer').show();
    				$('.RPEndUser').hide();
    				if (!bInit) {
    					$('#ShippingAddressType option[value="0"]').removeAttr('disabled');
						loadPaoliRepGroupList(false);
    				} else {
			    		reloadPaoliSalesRepList(@(Model.PaoliRepGroupMemberID.HasValue ? Model.PaoliRepGroupMemberID.Value.ToString() : "null"), true);
						loadDealerList(true, @(Model.DealerID.HasValue ? Model.DealerID.Value.ToString() : "null"), 
							@(Model.DealerMemberID.HasValue ? Model.DealerMemberID.Value.ToString() : "null"));
					}
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPDealer':
    				$('.RPMember').hide();
    				$('.RPRepGroup').hide();
    				$('.RPDealer').show();
    				$('.RPEndUser').hide();
    				if (!bInit) {
    					$('#ShippingAddressType option[value="0"]').removeAttr('disabled');
						loadDealerList(false, null, null);
    				} else {
						loadDealerList(true, @(Model.DealerID.HasValue ? Model.DealerID.Value.ToString() : "null"), 
							@(Model.DealerMemberID.HasValue ? Model.DealerMemberID.Value.ToString() : "null"));
					}
    				break;
    			case '@PDWModels.Collateral.NewOrderInformation.RPEndUser':
    				$('.RPMember').hide();
    				$('.RPRepGroup').hide();
    				$('.RPDealer').hide();
    				$('.RPEndUser').show();
    				if (!bInit) {
    					$('#ShippingAddressType option[value="0"]').attr('disabled', true);
    					$('#ShippingAddressType').val('1');
    				}
    				break;
    		}
    	}

    	function reloadDealerSalesRepList(dsrMemberID, bInit) {
			if( $('#DealerID').val() != '0' && $('#DealerID').val() != null ) {
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/User/GetDealerSalesRepListForCompany',
    				data: { companyId: $('#DealerID').val() },
    				success: function (data, textStatus, jqXHR) {
    					$('#DealerMemberID').empty();
    					$.each(data.theList, function (idx, item) {
    						$('#DealerMemberID').append('<option value="' + item.Value + '" ' + ((dsrMemberID == item.Value) ? 'selected' : '') + '>' + item.Text + '</option>');
    					});
    					if (dsrMemberID == null && !bInit) {
    						setCompanyDetails();
    					}
    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Dealer Sales Rep list:' + errorThrown)
    				}
    			});
			} else {
    			$('#DealerMemberID').empty();
				setCompanyDetails();
			}
    	}

    	function reloadPaoliSalesRepList(psrMemberID, bInit) {
    		$.ajax({
    			dataType: 'json',
    			type: 'GET',
    			url: '/User/GetPaoliSalesRepListForCompany',
    			data: { companyId: $('#PaoliRepGroupID').val() },
    			success: function (data, textStatus, jqXHR) {
    				$('#PaoliRepGroupMemberID').empty();
    				$.each(data.theList, function (idx, item) {
    					$('#PaoliRepGroupMemberID').append('<option value="' + item.Value + '" ' + ((psrMemberID == item.Value) ? 'selected' : '') + '>' + item.Text + '</option>');
    				});
    				if (psrMemberID == null && !bInit) {
    					setCompanyDetails();
    				}
    			},
    			error: function (jqXHR, textStatus, errorThrown) {
    				alert('Error getting Paoli Sales Rep list:' + errorThrown)
    			}
    		});
			if( !bInit ) {
	    		loadDealerList(bInit, null, null);
			}
    	}

		function loadDealerList(bInit, dealerId, dsrMemberId) {
			var theUrl = '/Company/GetDealerList';
			var dataSet = { includeBlank: 'false' };
			if( $('.RPRepGroup:hidden').length == 0 ) {
				// rep group is showing - only load dealers for the group
				theUrl = '/Company/GetDealerListForSalesRep';
				dataSet = { salesRepCompanyId: $('#PaoliRepGroupID').val(), includeBlank: 'true' };
			}
			$.ajax({
				dataType: 'json',
				type: 'GET',
				url: theUrl,
				data: dataSet,
				success: function (data, textStatus, jqXHR) {
					$('#DealerID').empty();
					$.each(data, function (idx, item) {
						$('#DealerID').append('<option value="' + item.ID + '" ' + ((dealerId == item.ID) ? 'selected' : '') + '>' + item.Text + '</option>');
					});
					reloadDealerSalesRepList(dsrMemberId, false);
				},
				error: function (jqXHR, textStatus, errorThrown) {
					alert('Error getting Dealer list:' + errorThrown)
				}
			});
		}

		function loadPaoliRepGroupList(bBlank) {
			var theUrl = '/Company/GetPaoliRepGroupList';
			var dataSet = { includeBlank: bBlank ? 'true' : 'false' };
			$.ajax({
				dataType: 'json',
				type: 'GET',
				url: theUrl,
				data: dataSet,
				success: function (data, textStatus, jqXHR) {
					$('#PaoliRepGroupID').empty();
					$.each(data, function (idx, item) {
						$('#PaoliRepGroupID').append('<option value="' + item.ID + '" >' + item.Text + '</option>');
					});
					reloadPaoliSalesRepList(null, false);
					loadDealerList(false, null, null);
				},
				error: function (jqXHR, textStatus, errorThrown) {
					alert('Error getting Rep Group list:' + errorThrown)
				}
			});
		}

	</script>

    @using( Html.BeginForm( "EditOrder", "Collateral", FormMethod.Post, new { id = "theForm", name = "theForm", enctype = "multipart/form-data" } ) )
	{
		<div>
		<div class="left">
			<h2>Edit A New Collateral Order - @Model.OrderID</h2>
		</div>
		<div class="right">
		@Html.MJLabelFor( m => m.OrderDate, true )<span id="orderDate"></span>
		</div>
		<div class="clear"></div>
		</div>
		@Html.HiddenFor( m => m.OrderID )
		<div class="activeSection requestPanel">
			<h3>Who's Requesting</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td>@Html.MJLabelFor( m => m.RequestingParty, false )</td><td>@Html.DropDownListFor( m => m.RequestingParty, PDWModels.Collateral.NewOrderInformation.RequestingParties.Select( rp => new SelectListItem() { Text = rp.Value, Value = rp.Key.ToString() } ) )</td>
				</tr>
				<tr class="RPMember">
					<td>@Html.MJLabelFor( m => m.PaoliMemberID, true )</td><td>@Html.DropDownListFor( m => m.PaoliMemberID, UserController.GetPaoliMemberDDList() )</td>
					<td></td><td></td>
				</tr>
				<tr class="RPRepGroup">
					<td>@Html.MJLabelFor( m => m.PaoliRepGroupID, false )</td><td>@Html.DropDownListFor( m => m.PaoliRepGroupID, CompanyController.GetCompanyDDList( PDWInfrastructure.PaoliWebUser.PaoliCompanyType.PaoliRepGroup, false ) )</td>
					<td>@Html.MJLabelFor( m => m.PaoliRepGroupMemberID, false )</td><td>@Html.DropDownListFor( m => m.PaoliRepGroupMemberID, new List<SelectListItem>() )</td>
				</tr>
				<tr class="RPDealer">
					<td>@Html.MJLabelFor( m => m.DealerID, false )</td><td>@Html.DropDownListFor( m => m.DealerID, new List<SelectListItem>() )</td>
					<td>@Html.MJLabelFor( m => m.DealerMemberID, false )</td><td>@Html.DropDownListFor( m => m.DealerMemberID, new List<SelectListItem>() )</td>
				</tr>
				<tr class="RPEndUser">
					<td>@Html.MJLabelFor( m => m.EndUserFirstName, true )</td><td>@Html.TextBoxFor( m => m.EndUserFirstName )</td>
					<td>@Html.MJLabelFor( m => m.EndUserLastName, true )</td><td>@Html.TextBoxFor( m => m.EndUserLastName )</td>
				</tr>
				<tr class="RPEndUser">
					<td>@Html.MJLabelFor( m => m.EndUserPhoneNumber, true )</td><td>@Html.TextBoxFor( m => m.EndUserPhoneNumber )</td>
					<td>@Html.MJLabelFor( m => m.EndUserEMailAddress, true )</td><td>@Html.TextBoxFor( m => m.EndUserEMailAddress )</td>
				</tr>
			</table>
		</div>
		foreach( var collateralType in CollateralController.GetCollateralTypeFilterList().Where( c => Model.OrderDetails.Any( od => od.CollateralTypeID.ToString() == c.Value ) ).OrderBy( c => int.Parse( c.Value ) ) )
		{
			if( collateralType.Value != "0" )
			{
		<div class="requestPanel collateralSection">
			<h3>Order Options - @collateralType.Text</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				@{
				var itemNum = 0;
				var startTR = "<tr>";
				var endTR = "</tr>";
	  }
				@for( int i = 0; i < Model.OrderDetails.Count; i++ )
	{
		if( Model.OrderDetails[i].CollateralTypeID.ToString() == collateralType.Value )
		{
			if( itemNum % 3 == 0 )
			{
				<text>@Html.Raw( startTR )</text>
			}
					<td>@Model.OrderDetails[i].Name<br /><span class="littleHelp fsi">@Model.OrderDetails[i].Description</span></td><td class="dataInfoThin">@Html.TextBoxFor( m => m.OrderDetails[i].Quantity, new { @class = "quantityInput" } )<span class="littleHelp">@Model.OrderDetails[i].Status</span></td>
			@Html.HiddenFor( m => m.OrderDetails[i].CollateralID )
			if( itemNum % 3 == 2 )
			{
				<text>@Html.Raw( endTR )</text>
			}
			itemNum++;
		}
	}
			</table>
		</div>
			}
		}
		<div class="requestPanel">
			<h3>Shipping Information</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td>@Html.LabelFor( m => m.ShippingType )</td><td>@Html.DropDownListFor( m => m.ShippingType, PDWModels.Collateral.NewOrderInformation.ShippingTypes.Select( st => new SelectListItem() { Text = st.Value, Value = st.Key.ToString() } ) )</td>
				</tr>
				<tr class="fedexAccount">
					<td>@Html.LabelFor( m => m.ShippingFedexAccount )</td><td>@Html.TextBoxFor( m => m.ShippingFedexAccount )</td>
				</tr>
				<tr>
					<td>@Html.LabelFor( m => m.ShippingAddressType )</td><td>@Html.DropDownListFor( m => m.ShippingAddressType, new List<SelectListItem>() { 
															 new SelectListItem() { Text = "Current Address on File", Value = "0" },
															 new SelectListItem() { Text = "Other", Value = "1" }
														 } )</td>
				</tr>
			</table>
			<input type="hidden" id="officialCompanyID" value="0" />
			<input type="hidden" id="officialUserID" value="0" />
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td>@Html.LabelFor( m => m.ShippingAttn )</td><td>@Html.TextBoxFor( m => m.ShippingAttn )</td>
					<td>@Html.LabelFor( m => m.ShippingCompanyName )</td><td>@Html.TextBoxFor( m => m.ShippingCompanyName )</td>
				</tr>
				<tr>
					<td>@Html.LabelFor( m => m.ShippingAddress1 )</td><td>@Html.TextBoxFor( m => m.ShippingAddress1 )</td>
					<td>@Html.LabelFor( m => m.ShippingAddress2 )</td><td>@Html.TextBoxFor( m => m.ShippingAddress2 )</td>
				</tr>
				<tr>
					<td>@Html.LabelFor( m => m.ShippingCity )</td><td>@Html.TextBoxFor( m => m.ShippingCity )</td>
					<td>@Html.LabelFor( m => m.ShippingState )</td><td>@Html.DropDownListFor( m => m.ShippingState, UserController.GetStateDDList() )</td>
				</tr>
				<tr>
					<td>@Html.LabelFor( m => m.ShippingZip )</td><td>@Html.TextBoxFor( m => m.ShippingZip )</td>
				</tr>
				<tr>
					<td>@Html.LabelFor( m => m.ShippingPhoneNumber )</td><td>@Html.TextBoxFor( m => m.ShippingPhoneNumber )</td>
				</tr>
				<tr>
					<td>@Html.LabelFor( m => m.ShippingEmailAddress )</td><td>@Html.TextBoxFor( m => m.ShippingEmailAddress )</td>
				</tr>
			</table>
		</div>
		<div class="requestPanel">
			<h3>Status</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td>@Html.LabelFor( m => m.Status )</td><td>@Html.DropDownListFor( m => m.Status, PDWModels.Collateral.NewOrderInformation.StatusValues.Select( st => new SelectListItem() { Text = st.Value, Value = st.Key.ToString() } ) )</td>
				</tr>
			</table>
		</div>
		<hr />
@Html.ValidationSummary()
		<div>
        <input type="submit" class="btn_type1" value="Save Order" id="submitBtn" />
		</div>
	}