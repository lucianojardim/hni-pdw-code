@model PDWModels.eCollateral.ECollateralSettings
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/NewLayout.cshtml";
	ViewBag.ShowHeaderArea = false;
}
@using ProductDataWarehouse.Controllers
@using PDWInfrastructure
    <script type="text/javascript">
    	$(document).ready(function () {
			$.data($('#theForm')[0], 'validator').settings.ignore = '.noValidate';

    		$.validator.addMethod(
					"regex",
					function (value, element, regexp) {
						var re = new RegExp(regexp);
						return this.optional(element) || re.test(value);
					},
					"Please check your input."
				);

    		$.validator.addMethod(
					"isunique",
					function (value, element, regexp) {
						return $(element).hasClass('isunique');
					},
					"Please check your input."
				);

    		$('#CustomURL').rules("add", { isunique: true, messages: { required: "URL must be valid and unique in the system."} });
    		$('#PaoliSalesRepGroupID').rules("add", { required: true, messages: { required: "Sales Rep Territory is required."} });
    		$('#DealershipID').rules("add", { required: true, messages: { required: "Dealership is required."} });
    		$('#DealershipPOCID').rules("add", { required: true, messages: { required: "Dealership Point of Contact is required."} });
    		$('#CustomerName').rules("add", { required: true, messages: { required: "Customer Name is required."} });
    		$('#ProjectName').rules("add", { required: true, messages: { required: "Project Name is required."} });
    		$('#DealershipPOCName').rules("add", { required: true, messages: { required: "Dealership Point of Contact Name is required."} });
    		$("#DealershipPOCPhone").rules("add", { regex: "^[2-9]\\d{2}-\\d{3}-\\d{4}$", messages: { regex: "Phone Number must be in the format ###-###-####."} });
    		$("#DealershipPOCEmail").rules("add", { regex: "^[A-Za-z0-9](([_\\.\\-\\+]?[a-zA-Z0-9]+)*)@@([A-Za-z0-9]+)(([\\.\\-]?[a-zA-Z0-9]+)*)\\.([A-Za-z]{2,})$", messages: { regex: "Email must be a valid Email Address."} });

    		$('#IsTemplate').msDropdown({ visibleRows: 15, on: { change: showHideProjectInfo } });
    		$('#PaoliSalesRepGroupID').msDropdown({ visibleRows: 15, on: { change: reloadPaoliSalesRepList } });
    		$('#DealershipID').msDropdown({ visibleRows: 15, on: { change: reloadDealerSalesRepList } });
    		$('#DealershipPOCID').msDropdown({ visibleRows: 15, on: { change: showHideDealerPOC } });
			$('#DealershipPOCAcctType').msDropdown();

    		$('.submitBtn').click(function (e) {
    			$('#theForm').submit();
    		});

			$('.cancelBtn').click(function (e) {
				location.href = '@Url.Action( "Manage", "ECB" )';
			});

    		$('#CustomURL').on('keyup', function (e) {
    			ValidateURL($(this).val());
    		});

			showHideProjectInfo();
    		ValidateURL('');
    		reloadPaoliSalesRepList();
    	});

		function showHideProjectInfo() {
			if ($('#IsTemplate').val() == 'true') {
				$('.projectInfo').hide();
				$('.projectInfo input').addClass('noValidate');
				$('.projectInfo select').addClass('noValidate');
			} else {
				$('.projectInfo').show();
				$('.projectInfo input').removeClass('noValidate');
				$('.projectInfo select').removeClass('noValidate');
			}
			showHideDealerPOC();
		}

    	function ValidateURL(urlValue) {
    		$.ajax({
    			dataType: 'json',
    			type: 'GET',
    			url: '/ECB/ValidateURL',
    			data: { url: urlValue },
    			success: function (data, textStatus, jqXHR) {
    				if (data.success) {
    					$('#urlIsOk').show();
    					$('#urlIsBad').hide();
						$('#CustomURL').addClass('isunique');
    				} else {
    					$('#urlIsOk').hide();
    					$('#urlIsBad').show();
						$('#CustomURL').removeClass('isunique');
    				}
    			},
    			error: function (jqXHR, textStatus, errorThrown) {
    				alert('Error getting Dealer list:' + errorThrown)
    			}
    		});
    	}

    	function emptyDropDownList(ddList) {
    		while (ddList.length > 0) {
    			ddList.remove(0);
    		}
    	}

    	function reloadDropDownUserList(ddListID, data) {
    		var ddList = $(ddListID).msDropdown().data("dd");
    		emptyDropDownList(ddList);
    		$.each(data.theList, function (idx, item) {
    			ddList.add({ text: item.FullName, value: item.UserID });
    		});
    	}

    	function reloadDropDownCompanyList(ddListID, data) {
    		var ddList = $(ddListID).msDropdown().data("dd");
    		emptyDropDownList(ddList);
    		$.each(data, function (idx, item) {
    			ddList.add({ text: item.Text, value: item.ID });
    		});
    	}

    	function reloadPaoliSalesRepList() {
    		if ($('#PaoliSalesRepGroupID').val() != null && $('#PaoliSalesRepGroupID').val() != '' && $('#PaoliSalesRepGroupID').val() != '0') {
				@if( PDWInfrastructure.PaoliWebUser.CurrentUser.IsDealerUser )
	{
		var thisCompany = ProductDataWarehouse.Controllers.CompanyController.GetThisCompanyAsDDItem( includeTerritory: true );
				<text>
    				emptyDropDownList($('#DealershipID').msDropdown().data("dd"));
    				$('#DealershipID').msDropdown().data("dd").add({text:'@(thisCompany.First().Text.Replace( "'", "''" ))', value:'@(thisCompany.First().Value)'});
					$('#DealershipID').msDropdown().data("dd").set("selectedIndex", 0);

    				reloadDealerSalesRepList();
				</text>
	}
	else
	{
				<text>
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/Company/GetDealerListForSalesRep',
    				data: { salesRepCompanyId: $('#PaoliSalesRepGroupID').val(), includeTerritory: true },
    				success: function (data, textStatus, jqXHR) {
						reloadDropDownCompanyList('#DealershipID', data);
    					if( $('#DealershipID option').length > 0 ) {
							$('#DealershipID').msDropdown().data("dd").set("selectedIndex", 0);
    					}

    					reloadDealerSalesRepList();
    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Dealer list:' + errorThrown)
    				}
    			});
				</text>
	}

    		} else {
    			emptyDropDownList($('#DealershipID').msDropdown().data("dd"));
    			emptyDropDownList($("#DealershipPOCID").msDropdown().data("dd"));
				$('#DealershipPOCName').addClass('noValidate');
				$('.DSRPOCCell').hide();
    		}
		}

    	function reloadDealerSalesRepList() {
    		if ($('#DealershipID').val() != null && $('#DealershipID').val() != '' && $('#DealershipID').val() != '0') {
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/User/GetDealerSalesRepListForCompany',
    				data: { companyId: $('#DealershipID').val(), enabledOnly: true },
    				success: function (data, textStatus, jqXHR) {
    					reloadDropDownUserList('#DealershipPOCID', data);
						$('#DealershipPOCID').msDropdown().data("dd").add({text:'Other', value:'0'});
    					$('#DealershipPOCID').msDropdown().data("dd").set("selectedIndex", 0);
						showHideDealerPOC();
    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Dealer Sales Rep list:' + errorThrown)
    				}
    			});
    		} else {
    			emptyDropDownList($("#DealershipPOCID").msDropdown().data("dd"));
				$('#DealershipPOCName').addClass('noValidate');
				$('.DSRPOCCell').hide();
    		}
    	}

		function showHideDealerPOC() {
    		if ($('#DealershipPOCID').val() == '0' && $('#IsTemplate').val() == 'false') {
    			$('.DSRPOCCell').show();
				$('#DealershipPOCName').removeClass('noValidate');
   			} else {
    			$('.DSRPOCCell').hide();
 				$('#DealershipPOCName').addClass('noValidate');
   			}
		}

	</script>
@{
	CompanyController.GetCompanyListFunction GetSalesRepList = CompanyController.GetCompanyDDList;
	if( PaoliWebUser.CurrentUser.IsInRole( PaoliWebUser.PaoliWebRole.PaoliSalesRep ) )
	{
		GetSalesRepList = CompanyController.GetThisCompanyAsDDItem;
	}
	else if( PaoliWebUser.CurrentUser.IsDealerUser )
	{
		GetSalesRepList = CompanyController.GetSalesRepForDealerDDItem;
	}
	var isTemplateList = new List<SelectListItem>() { new SelectListItem() { Text = "No", Value = "false" } };
	if( PaoliWebUser.CurrentUser.CanAddECTemplate )
	{
		isTemplateList.Add( new SelectListItem() { Text = "Yes", Value = "true" } );
	}
}

                     <div class="container">
<div class="main_inner1">
	<h3>
		Let's get started</h3>
	<div class="main_inner2_btm">
		<div class="main_inner2_btm_mid_myacct">
    @using( Html.BeginForm( "EditSettings", "ECB", FormMethod.Post, new { id = "theForm", name = "theForm", enctype = "multipart/form-data" } ) )
	{
		@Html.AntiForgeryToken()
		@Html.HiddenFor( m => m.ItemID )
			<i class="clear_0"></i>
			<ul>
				<li>
					<div class="colmn1">
						Is Template?</div>
					<div class="colmn3single">
						@Html.DropDownListFor( m => m.IsTemplate, isTemplateList )</div>
				</li>
				<li>
					<div class="colmn1">
						File Name@(Html.ValidationMessageFor( m => m.FileName ))</div>
					<div class="colmn3single">
						@Html.TextBoxFor( m => m.FileName )</div>
				</li>
				<li>
					<div class="colmn1">
						Custom URL@(Html.ValidationMessageFor( m => m.CustomURL ))</div>
					<div class="colmn3single">
						@Html.TextBoxFor( m => m.CustomURL )<span id="urlIsOk">OK</span><span id="urlIsBad">Not OK</span></div>
				</li>
				<hr/>
				<li class="projectInfo">
					<div class="colmn1">
						Sales Rep Territory@(Html.ValidationMessageFor( m => m.PaoliSalesRepGroupID ))</div>
					<div class="colmn3single">
						@Html.DropDownListFor( m => m.PaoliSalesRepGroupID, GetSalesRepList( PDWInfrastructure.PaoliWebUser.PaoliCompanyType.PaoliRepGroup, includeTerritory: true ) )
				</li>
				<li class="projectInfo">
					<div class="colmn1">
						Dealership@(Html.ValidationMessageFor( m => m.DealershipID ))</div>
					<div class="colmn3single">
						@Html.DropDownListFor( m => m.DealershipID, new List<SelectListItem>() )</div>
				</li>
				<li class="projectInfo">
					<div class="colmn1">
						Dealership Point of Contact@(Html.ValidationMessageFor( m => m.DealershipPOCID ))</div>
					<div class="colmn3single">
						@Html.DropDownListFor( m => m.DealershipPOCID, new List<SelectListItem>() )</div>
				</li>
				<li class="DSRPOCCell">
					<div class="colmn1">
						Name@(Html.ValidationMessageFor( m => m.DealershipPOCName ))</div>
					<div class="colmn3single">
						@Html.TextBoxFor( m => m.DealershipPOCName )</div>
				</li>
				<li class="DSRPOCCell">
					<div class="colmn1">
						Email@(Html.ValidationMessageFor( m => m.DealershipPOCEmail ))</div>
					<div class="colmn3single">
						@Html.TextBoxFor( m => m.DealershipPOCEmail )</div>
				</li>
				<li class="DSRPOCCell">
					<div class="colmn1">
						Phone@(Html.ValidationMessageFor( m => m.DealershipPOCPhone ))</div>
					<div class="colmn3single">
						@Html.TextBoxFor( m => m.DealershipPOCPhone )</div>
				</li>
				<li class="DSRPOCCell">
					<div class="colmn1">
						User Type@(Html.ValidationMessageFor( m => m.DealershipPOCID ))</div>
					<div class="colmn3single">
						@Html.DropDownListFor( m => m.DealershipPOCAcctType, UserController.GetDealerUserRoleDDList() )</div>
				</li>
				<li class="projectInfo">
					<div class="colmn1">
						Customer Name@(Html.ValidationMessageFor( m => m.CustomerName ))</div>
					<div class="colmn3single">
						@Html.TextBoxFor( m => m.CustomerName )</div>
				</li>
				<li class="projectInfo">
					<div class="colmn1">
						Project Name@(Html.ValidationMessageFor( m => m.ProjectName ))</div>
					<div class="colmn3single">
						@Html.TextBoxFor( m => m.ProjectName )</div>
				</li>
			</ul>
			<i class="clear_0"></i><span class="btn7 cancelBtn">CANCEL</span> <span class="btn8 submitBtn">SAVE AND CONTINUE</span>
	}
		</div>
		</div>
		</div>
		</div>