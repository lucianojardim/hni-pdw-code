@{
	ViewBag.Title = "Spec Requests";
	ViewBag.CurrentPage = "Database";
	ViewBag.CurrentSubPage = "Typicals";
	Layout = "~/Views/Shared/HeaderLayout.cshtml";
}

<h2>Spec Request List</h2>

<a href="@Url.Action( "AddRequest", "SpecRequest" )" id="addNewRequest">Add New</a><br />
@Html.CheckBox( "PendingOnly" )Show Only Pending Spec Requests<br />
@Html.CheckBox( "RecommendedOnly" )Show Only Recommended Spec Requests<br />
<div>
    <table id="specRequestList">
    <thead></thead>
    <tfoot></tfoot>
    </table>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		$('#PendingOnly').click(loadSpecRequests);
		$('#RecommendedOnly').click(loadSpecRequests);

		loadSpecRequests();
	});

	var oTable = null;
	function loadSpecRequests() {
		if (oTable != null) {
			oTable.fnDraw();
			return;
		}

		oTable = $('#specRequestList').dataTable({
			"bServerSide": true,
			"bAutoWidth": false,
			"bFilter": true,
			"bLengthChange": false, // don't show dropdown for #items per page
			"bPaginate": true,
			"bInfo": true,
			"sAjaxSource": '@Url.Action( "FullRequestList" )',
			"fnServerParams": function (aoData) {
				aoData.push({ "name": "pendingOnly", "value": $('#PendingOnly:checked').length > 0 });
				aoData.push({ "name": "recommendedOnly", "value": $('#RecommendedOnly:checked').length > 0 });
			},
			"iDisplayLength": 100,
			"oLanguage": {
				"sSearch": "Filter by Keyword:"
			},
			"fnServerData": function (sSource, aoData, fnCallback) {
				$.ajax({
					dataType: 'json',
					type: "POST",
					url: sSource,
					data: aoData,
					success: function (data, textStatus, jqXHR) {
						fnCallback(data, textStatus, jqXHR);
						$('.fbImageBtn').fancybox({
							'autoDimensions': false,
							'width': 900,
							'height': 700,
							'padding': 20,
							'margin': 0,
							'scrolling': 'auto',
							'titleShow': false,
							'type': 'iframe'
						});
					},
					error: function (jqXHR, textStatus, errorThrown) { alert('Error getting list of Requests:' + errorThrown) }
				})
			},
			"bProcessing": false, // don't want to use the default progress indicator at this time
			"aaSorting": [[0, "desc"]],
			"aoColumnDefs": [
					{ "sName": "EditButtons",
						"sTitle": "Name", 
						"aTargets": [0],
                    	"mDataProp": "EditButtons", "sWidth": "8%",
                    	"fnRender": function (oObj) {
                    		return '<a href=\"@Url.Action( "EditRequest", "SpecRequest" )/' + oObj.aData["RequestID"] + '\">' + oObj.aData["Name"] + '</a>';
                    	}
                    },
                    { "sName": "Dealer", "sTitle": "Dealer", "aTargets": [1], "mDataProp": "Dealer", "sWidth": "17%" },
                    { "sName": "ProjectName", "sTitle": "Project Name", "aTargets": [2], "mDataProp": "ProjectName", "sWidth": "16%" },
                    { "sName": "SalesRepGroup", "sTitle": "Rep Group", "aTargets": [3], "mDataProp": "SalesRepGroup", "sWidth": "17%" },
                    { "sName": "SpecTeamMember", "sTitle": "Member", "aTargets": [4], "mDataProp": "SpecTeamMember", "sWidth": "10%" },
                    { "sName": "CreatedDate", "sTitle": "Created", "aTargets": [5], "mDataProp": "CreatedDate", "sWidth": "9%",
                    	"fnRender": function (oObj) {
                    		if (oObj.aData["CreatedDate"] != null) {
                    			var milli = oObj.aData["CreatedDate"].replace(/\/Date\((-?\d+)\)\//, '$1');
                    			var cDate = new Date(parseInt(milli));
                    			var offset = new Date().getTimezoneOffset();
                    			cDate.setMinutes(cDate.getMinutes() - offset);
                    			return (cDate.getMonth() + 1) + '/' + cDate.getDate() + '/' + cDate.getFullYear();
                    		}
                    		return '';
                    	}
                    },
                    { "sName": "Status",
                    	"aTargets": [6],
                    	"bSearchable": false,
                    	"bSortable": false,
                    	"mDataProp": "Status", "sTitle": "Status", "sWidth": "10%",
                    	"fnRender": function (oObj) {
                    		if (oObj.aData["IsCompleted"]) {
                    			return 'Completed';
                    		}
                    		return 'Pending';
                    	}
                    },
                    { "sName": "TypicalFinder",
                    	"aTargets": [7],
                    	"bSearchable": false,
                    	"bSortable": false,
                    	"mDataProp": "TypicalFinder", "sTitle": "Typical Finder", "sWidth": "13%",
                    	"fnRender": function (oObj) {
                    		if (oObj.aData["IsPublished"]) {
                    			return '<a href=\"@Url.Action( "EditTypical", "SpecRequest" )/' + oObj.aData["RequestID"] + '/?iframe\" class="fbImageBtn">Published</a>';
                    		} else if (oObj.aData["IsCompleted"]) {
                    			if (oObj.aData["IsRecommended"]) {
                    				return '<a href=\"@Url.Action( "AddTypical", "SpecRequest" )/' + oObj.aData["RequestID"] + '/?iframe\" class="fbImageBtn">Recommended</a>';
                    			} else {
                    				return 'Not recommended';
                    			}
                    		}
                    		return '';
                    	}
                    }
                ]
		});
	}

</script>