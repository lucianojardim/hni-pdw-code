@model PDWModels.SpecRequests.SpecRequestInformation
@{
	ViewBag.Title = "Create A New Spec Quote Request";
	ViewBag.CurrentPage = "Database";
	ViewBag.CurrentSubPage = "Typicals";
	Layout = "~/Views/Shared/HeaderLayout.cshtml";
}
@using ProductDataWarehouse.Models
@using ProductDataWarehouse.Controllers
@using PDWInfrastructure

<h2>Create A New Spec Quote Request</h2>

    <script type="text/javascript">
		var fileCount = 1;
		$(document).ready(function () {
			$.data($('#theForm')[0], 'validator').settings.ignore = ':hidden';

    		$('#LaminatePreference').rules("add", { required: true, messages: { required: "Laminate Preference is required."} });

			reloadDealerSalesRepList();

			$('#DealerID').change(function () {
				reloadDealerSalesRepList();
			});

			reloadPaoliSalesRepList();

			$('#PaoliSalesRepGroupID').change(function () {
				reloadPaoliSalesRepList();
			});

			$('.nextBtn').click(function (e) {
				e.preventDefault();
				$('.validation-summary-errors ul').empty();
				if ($('#theForm').valid()) {
					setPanel(1);
				}
			});

			$('.previousBtn').click(function (e) {
				e.preventDefault();
				setPanel(-1);
			});

			$('.cancelBtn').click(function (e) {
				window.location.href = '@Url.Action( "Manage" )';
			});

			$('#Grommets').change(function (e) {
				if ($(this).attr("checked")) {
					$('.grommetDetails').show();
				} else {
					$('.grommetDetails').hide();
				}
			});

			showHideContractInfo();
			$('#IsGSA').change(function(e) {
				showHideContractInfo();
			});

			showHideDrawerOptions();
			showHideCGCSOptions();
			showHideFabric();
			$('.chkCasegoods').change(function (e) {
				showHideDrawerOptions();
				showHideCGCSOptions();
			});

			$('.chkSeating').change(function (e) {
				showHideFabric();
			});

			$('.chkConferencing').change(function (e) {
				showHideCGCSOptions();
			});

			showHideLaminatePreference();
			$('.chkFinish').change(function (e) {
				showHideLaminatePreference();
			});
		});

		function showHideContractInfo() {
			if ($('#IsGSA:checked').length > 0) {
				$('.gsaOnly').show();
			} else {
				$('.gsaOnly').hide();
			}			
			
		}

		function showHideLaminatePreference() {
			if ($('.chkFinish:checked[value="Laminate"]').length > 0) {
				$('.laminatePreference').show();
			} else {
				$('.laminatePreference').hide();
			}			
		}

		function showHideCGCSOptions() {
			if ($('.chkCasegoods:checked').length > 0 || $('.chkConferencing:checked').length > 0) {
				$('.cgcsOnly').show();
			} else {
				$('.cgcsOnly').hide();
			}
		}
		
		function showHideFabric() {
			if ($('.chkSeating:checked').length > 0) {
				$('.forFabric').show();
			} else {
				$('.forFabric').hide();
			}
		}

		function showHideDrawerOptions() {
			if ($('.chkCasegoods:checked').length > 0) {
				$('.drawerOptions').show();
			} else {
				$('.drawerOptions').hide();
			}
		}

		function fileChanged() {
    		var doInsert = true;
    		$('#fileContainer input[type="file"]').each(function (i, fc) {
    			if (fc.value == null || fc.value == '') {
    				doInsert = false;
    				return false;
    			}
    		});
    		if (doInsert) {
    			$('#fileContainer').append('<br/><input type="file" name="addlFiles[' + fileCount + ']" class="addlFiles" onchange="fileChanged()" />' +
				'<input type="hidden" name="addlFiles.Index" value="' + fileCount + '" />');
    			fileCount++;
    		}		
    	}

    	function setPanel(offset) {
    		var curIdx = $('#theForm div.activeSection').index('#theForm div.requestPanel');
    		var divCount = $('#theForm div.requestPanel').length;
//    		console.log('curIdx: ' + curIdx + ' divCount: ' + divCount + ' offset: ' + offset);
    		if (offset == -1 && curIdx > 0) {
    			$('.activeSection').removeClass('activeSection').addClass('futureSection');
    			$('#theForm div.requestPanel:eq(' + (curIdx + offset) + ')').removeClass('futureSection').addClass('activeSection');
    			if (curIdx + offset > 0) {
    				$('.previousBtn').show();
    			} else {
    				$('.previousBtn').hide();
    			}
    			$('.nextBtn').show();
    			$('.submitBtn').hide();
    		} else if (offset == 1 && curIdx < (divCount - 1)) {
    			$('.activeSection').removeClass('activeSection').addClass('futureSection');
    			$('#theForm div.requestPanel:eq(' + (curIdx + offset) + ')').removeClass('futureSection').addClass('activeSection');
    			if (curIdx + offset < (divCount - 1)) {
    				$('.nextBtn').show();
    			} else {
    				$('.nextBtn').hide();
    				$('.submitBtn').show();
    				fillConfirmForm();
    			}
    			$('.previousBtn').show();
    		}
    	}

    	function fillConfirmForm() {
    		var t = $('#confirmTable tbody');
    		t.empty();

    		addConfirmHeaderRow(t, 'This Request is for:');
    		if ($('#PaoliSalesRepGroupID').val() != null && $('#PaoliSalesRepGroupID').val() != '' && $('#PaoliSalesRepGroupID').val() != '0') {
    			addConfirmRow(t, '@Html.MJLabelFor( m => m.PaoliSalesRepGroupID, true )', $('#PaoliSalesRepGroupID option:selected').text());
    			if ($('#PaoliSalesRepMemberID').val() != null && $('#PaoliSalesRepMemberID').val() != '' && $('#PaoliSalesRepMemberID').val() != '0') {
    				addConfirmRow(t, '@Html.MJLabelFor( m => m.PaoliSalesRepMemberID, true )', $('#PaoliSalesRepMemberID option:selected').text());
    			}
    			if ($('#DealerID').val() != null && $('#DealerID').val() != '' && $('#DealerID').val() != '0') {
    				addConfirmRow(t, '@Html.MJLabelFor( m => m.DealerID, true )', $('#DealerID option:selected').text());
    				if ($('#DealerMemberID option').length != 0) {
    					if ($('#DealerMemberID').val() != null && $('#DealerMemberID').val() != '' && $('#DealerMemberID').val() != '0') {
    						addConfirmRow(t, '@Html.MJLabelFor( m => m.DealerMemberID, true )', $('#DealerMemberID option:selected').text());
    					}
    				} else {
    					if ($('#DealerPointOfContact').val() != '') {
    						addConfirmRow(t, '@Html.MJLabelFor( m => m.DealerMemberID, true )', $('#DealerPointOfContact').val());
    					}
    				}
    			}
    		}

			addConfirmHeaderRow(t, 'About the Project');
    		if ($('#EndCustomer').val() != null) {
    			addConfirmRow(t, '@Html.MJLabelFor( m => m.EndCustomer, false )', $('#EndCustomer').val());
    		}
    		if ($('#ProjectName').val() != null) {
    			addConfirmRow(t, '@Html.MJLabelFor( m => m.ProjectName, false )', $('#ProjectName').val());
    		}
    		if ($('#ProjectSize').val() != null) {
    			addConfirmRow(t, '@Html.MJLabelFor( m => m.ProjectSize, false )', $('#ProjectSize').val());
    		}
			if ($('#IsGSA').is(':checked')) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.IsGSA, false )', 'Yes');
				addConfirmRow(t, '@Html.MJLabelFor( m => m.ContractID, false )', $('#ContractID option:selected').text());
			}
			if ($('#AvailableForIn2').is(':checked')) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.AvailableForIn2, false )', 'Yes');
			}

			addConfirmHeaderRow(t, 'Services Rendered / Project Requirements');
    		$('.chkServices').each(function () {
    			if ($(this).attr('checked')) {
    				addConfirmRow(t, $(this).siblings('label').text(), 'Yes');
    			}
    		});
			var fileList = new Array();
			$('#fileContainer input[type="file"]').each(function (i, fc) {
				if (fc.files != null) {
					if (fc.files.length != 0) {
						fileList.push(fc.files[0].name);
					}
				} else if (fc.value != null) {
					fileList.push(fc.value);
				}
			});
			if (fileList.length != 0) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.addlFiles, true )', fileList.join(', '));
			}
			var filesNeeded = new Array();
    		$('.chkFilesNeeded').each(function () {
    			if ($(this).attr('checked')) {
					filesNeeded.push($(this).siblings('label').text());
    			}
    		});
			if( filesNeeded.length != 0 ) {
				addConfirmRow(t, 'Files Requested', filesNeeded.join( ', ' ));
			}
			if ($('#Notes').val() != null) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.Notes, true )', $('#Notes').val());
			}

			var casegoodsList = new Array();
			$('.chkCasegoods').each(function (i, fc) {
				if ($(this).attr('checked')) {
					casegoodsList.push($(this).next('label').text());
				}
			});
			if (casegoodsList.length != 0) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.Casegoods, false )', casegoodsList.join(', '));
			}

			var conferencingList = new Array();
			$('.chkConferencing').each(function (i, fc) {
				if ($(this).attr('checked')) {
					conferencingList.push($(this).next('label').text());
				}
			});
			if (conferencingList.length != 0) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.Conferencing, false )', conferencingList.join(', '));
			}

			var seatingList = new Array();
			$('.chkSeating').each(function (i, fc) {
				if ($(this).attr('checked')) {
					seatingList.push($(this).next('label').text());
				}
			});
			if (seatingList.length != 0) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.Seating, false )', seatingList.join(', '));
			}

			if (casegoodsList.length != 0) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.DrawerOption, true )', $('#DrawerOption option:selected').text());
			}
			if (seatingList.length != 0) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.FabricGrade, true )', $('#FabricGrade option:selected').text());
				if ($('#Fabric').val() != null) {
					addConfirmRow(t, '@Html.MJLabelFor( m => m.Fabric, true )', $('#Fabric').val());
				}
			}
			if (casegoodsList.length != 0 || conferencingList.length != 0) {
				if ($('#Grommets').is(':checked')) {
					addConfirmRow(t, '@Html.MJLabelFor( m => m.Grommets, false )', 'Yes');
					if ($('#GrommetDetails').val() != null) {
						addConfirmRow(t, '@Html.MJLabelFor( m => m.GrommetDetails, false )', $('#GrommetDetails').val());
					}
					if ($('#GrommetPosition').val() != null) {
						addConfirmRow(t, '@Html.MJLabelFor( m => m.GrommetPosition, false )', $('#GrommetPosition').val());
					}
				}

				var finishList = new Array();
				var otherFinishes = $('#OtherFinishDetails').val();
				$('.chkFinish').each(function (i, fc) {
					if ($(this).attr('checked')) {
						finishList.push($(this).next('label').text());
					}
				});
				if (finishList.length != 0) {
					addConfirmRow(t, '@Html.MJLabelFor( m => m.Finishes, false )', finishList.join(', ') + (otherFinishes != null ? ('<br/>' + otherFinishes) : ''));
					if ($.inArray(finishList, 'Laminate')) {
						addConfirmRow(t, '@Html.MJLabelFor( m => m.LaminatePreference, false )', $('#LaminatePreference option:selected').text());

					}
				}
			}

			if ($('#SpecialRequests').val() != null) {
				addConfirmRow(t, '@Html.MJLabelFor( m => m.SpecialRequests, true )', $('#SpecialRequests').val());
			}

		}

		function addConfirmHeaderRow(table, label) {
			table.append('<tr><td colspan="2"><hr/><h4>' + label + '</h4></td></tr>');
		}

		function addConfirmRow(table, label, text) {
    		table.append('<tr><td>' + label + '</td><td>' + text + '</td></tr>');
    	}

    	function reloadDealerSalesRepList() {
    		if ($('#DealerID').val() != null && $('#DealerID').val() != '' && $('#DealerID').val() != '0') {
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/User/GetDealerSalesRepListForCompany',
    				data: { companyId: $('#DealerID').val(), enabledOnly: true },
    				success: function (data, textStatus, jqXHR) {
    					$('#DealerMemberID').empty();
    					$.each(data.theList, function (idx, item) {
    						$('#DealerMemberID').append('<option value="' + item.UserID + '">' + item.FullName + '</option>');
    					});
    					if ($('#DealerMemberID option').length == 0) {
    						$('#DealerMemberID').hide();
    						$('#DealerPointOfContact').show();
    					} else {
    						$('#DealerPointOfContact').hide();
    						$('#DealerMemberID').show();
    					}
    					$('.DSRCell').show();
    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Dealer Sales Rep list:' + errorThrown)
    				}
    			});
    		} else {
    			$('#DealerMemberID').empty();
    			$('#DealerPointOfContact').val('');
    			$('.DSRCell').hide();
    		}
    	}

    	function reloadPaoliSalesRepList() {
    		if ($('#PaoliSalesRepGroupID').val() != null && $('#PaoliSalesRepGroupID').val() != '' && $('#PaoliSalesRepGroupID').val() != '0') {
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/User/GetPaoliSalesRepListForCompany',
    				data: { companyId: $('#PaoliSalesRepGroupID').val(), enabledOnly: true },
    				success: function (data, textStatus, jqXHR) {
    					$('#PaoliSalesRepMemberID').empty();
    					$('.PSRCell').hide();
    					$.each(data.theList, function (idx, item) {
    						$('#PaoliSalesRepMemberID').append('<option value="' + item.UserID + '">' + item.FullName + '</option>');
    						$('.PSRCell').show();
    					});
    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Paoli Sales Rep list:' + errorThrown)
    				}
    			});

				@if( PaoliWebUser.CurrentUser.IsDealerUser )
	{
		var thisCompany = CompanyController.GetThisCompanyAsDDItem();
		var thisItem = "<option value=\"" + thisCompany.First().Value + "\">" + thisCompany.First().Text.Replace( "'", "''" ) + "</option>";
				<text>
    				$('#DealerID').empty();
    				$('#DealerID').append('@Html.Raw( thisItem )');

    				reloadDealerSalesRepList();
				</text>
	}
	else
	{
				<text>
    			$.ajax({
    				dataType: 'json',
    				type: 'GET',
    				url: '/Company/GetDealerListForSalesRep',
    				data: { salesRepCompanyId: $('#PaoliSalesRepGroupID').val(), includeTerritory: true },
    				success: function (data, textStatus, jqXHR) {
    					$('#DealerID').empty();
    					$('.DealerRow').hide();
    					$.each(data, function (idx, item) {
    						$('#DealerID').append('<option value="' + item.ID + '">' + item.Text + '</option>');
    						$('.DealerRow').show();
    					});
    					reloadDealerSalesRepList();
    				},
    				error: function (jqXHR, textStatus, errorThrown) {
    					alert('Error getting Dealer list:' + errorThrown)
    				}
    			});
				</text>
	}

    		} else {
    			$('#PaoliSalesRepMemberID').empty();
    			$('#DealerID').empty();
    			$('.PSRCell').hide();
    			$('.DealerRow').hide();
    		}
    	}
	</script>

@{
	var stepCount = 7;
	var stepNum = 1;
	CompanyController.GetCompanyListFunction GetSalesRepList = CompanyController.GetCompanyDDList;
	if( PaoliWebUser.CurrentUser.IsInRole( PaoliWebUser.PaoliWebRole.PaoliSalesRep ) )
	{
		GetSalesRepList = CompanyController.GetThisCompanyAsDDItem;
	}
	else if( PaoliWebUser.CurrentUser.IsDealerUser )
	{
		GetSalesRepList = CompanyController.GetSalesRepForDealerDDItem;
	}
}

    @using( Html.BeginForm( "AddRequest", "SpecRequest", FormMethod.Post, new { id = "theForm", name = "theForm", enctype = "multipart/form-data" } ) )
	{
		@Html.AntiForgeryToken()
		<div>
		<div class="left">
        <input type="button" class="btn_type1 previousBtn" value="Previous" id="" style="display:none;" />
		</div>
		<div class="right">
				<input type="button" class="btn_type1 cancelBtn" value="Cancel" />
        <input type="button" class="btn_type1 nextBtn" value="Next" id="" />
        <input type="submit" class="btn_type1 submitBtn" value="Submit Request" id="" style="display:none;" />
		</div>
		<div class="clear"></div>
@Html.ValidationSummary()
		<hr />
		</div>
		<div class="activeSection requestPanel">
			<h3>Step @(stepNum++) of @stepCount: This Request is for:</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td>@Html.MJLabelFor( m => m.PaoliSalesRepGroupID, true )</td><td>@Html.DropDownListFor( m => m.PaoliSalesRepGroupID, GetSalesRepList( PDWInfrastructure.PaoliWebUser.PaoliCompanyType.PaoliRepGroup, includeTerritory: true ) )</td>
					<td class="PSRCell">@Html.MJLabelFor( m => m.PaoliSalesRepMemberID, true )</td><td class="PSRCell">@Html.DropDownListFor( m => m.PaoliSalesRepMemberID, new List<SelectListItem>() )</td>
				</tr>
				<tr class="DealerRow">
					<td>@Html.MJLabelFor( m => m.DealerID, false )</td><td>@Html.DropDownListFor( m => m.DealerID, new List<SelectListItem>() )</td>
					<td class="DSRCell">@Html.MJLabelFor( m => m.DealerMemberID, true )</td><td class="DSRCell">@Html.DropDownListFor( m => m.DealerMemberID, new List<SelectListItem>() )@Html.TextBoxFor( m => m.DealerPointOfContact )</td>
				</tr>
			</table>
		</div>
		<div class="futureSection requestPanel">
			<h3>Step @(stepNum++) of @stepCount: About This Project</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td>@Html.MJLabelFor( m => m.EndCustomer, false )</td><td>@Html.TextBoxFor( m => m.EndCustomer )</td>
					<td>@Html.MJLabelFor( m => m.ProjectName, false )</td><td>@Html.TextBoxFor( m => m.ProjectName )</td>
				</tr>
				<tr>
					<td></td><td><span class="littleHelp">Provide the end user company name.</span></td>
					<td></td><td><span class="littleHelp">Provide a short project name that will help us identify this project such as project name, facility, etc.</span></td>
				</tr>
				<tr>
					<td>@Html.MJLabelFor( m => m.ProjectSize, false )</td><td>@Html.TextBoxFor( m => m.ProjectSize )</td>
				</tr>
				<tr>
					<td></td><td><span class="littleHelp">Need number of private offices and/or meeting spaces</span></td>
					<td></td><td><span class="littleHelp"></span></td>
				</tr>
				<tr>
					<td colspan="2">@Html.CheckBoxFor( m => m.IsGSA ) @Html.MJLabelFor( m => m.IsGSA, false )</td>
					<td colspan="2">@Html.CheckBoxFor( m => m.AvailableForIn2 ) @Html.MJLabelFor( m => m.AvailableForIn2, false )</td>
				</tr>
				<tr>
					<td class="gsaOnly">@Html.MJLabelFor( m => m.ContractID, false )</td><td class="gsaOnly">@Html.DropDownListFor( m => m.ContractID, SpecRequestController.GSAContractList( true ) )</td>
				</tr>
			</table>
		</div>
		<div class="futureSection requestPanel">
			<h3>Step @(stepNum++) of @stepCount: Services Requested</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td>@Html.CheckBoxFor( m => m.NeedAuditSpecs, new { @class = "chkServices" } ) @Html.MJLabelFor( m => m.NeedAuditSpecs, false )<span class="littleHelp">Our team can quickly review and check a specification you have completed. Please include a parts list and a legible drawing/sketch of the furniture layout with sizes and details clearly noted.</span></td>
					<td rowspan="5" id="fileContainer">@Html.MJLabelFor( m => m.addlFiles, true )<span class="littleHelp">Attach PDFs or other applicable files to help the specificaton engineer complete this request.</span><input type="file" name="addlFiles[0]" class="addlFiles" onchange="fileChanged()" /><input type="hidden" name="addlFiles.Index" value="0" /></td>
				</tr>
				<tr>
					<td>@Html.CheckBoxFor( m => m.NeedFloorplanSpecs, new { @class = "chkServices" } ) @Html.MJLabelFor( m => m.NeedFloorplanSpecs, false )<span class="littleHelp">Please attach a legible drawing/sketch of the furniture layout with sizes and details clearly noted.</span></td>
				</tr>
				<tr>
					<td>@Html.CheckBoxFor( m => m.NeedPhotoRendering, new { @class = "chkServices" } ) @Html.MJLabelFor( m => m.NeedPhotoRendering, false )<span class="littleHelp">Initial rendering is no charge, changes and additional renderings may incur fees. Check with Specification services. Extended lead times may apply.</span></td>
				</tr>
				<tr>
					<td>@Html.CheckBoxFor( m => m.Need2DDrawing, new { @class = "chkServices" } ) @Html.MJLabelFor( m => m.Need2DDrawing, false )</td>
				</tr>
				<tr>
					<td>@Html.CheckBoxFor( m => m.NeedValueEng, new { @class = "chkServices" } ) @Html.MJLabelFor( m => m.NeedValueEng, false )<span class="littleHelp">Please include a parts list and a legible drawing/sketch of the furniture layout with sizes and details clearly noted.</span></td>
				</tr>
			</table>
		</div>
		<div class="futureSection requestPanel">
			<h3>Step @(stepNum++) of @stepCount: What file format do you want?</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td style="height:10px">Our spec team will create your specification or<br />quote request in any of the following file formats.<br /><br />Select from the options below:</td>
					<td rowspan="6">@Html.MJLabelFor( m => m.Notes, true ) <br/> @Html.TextAreaFor( m => m.Notes, new { @rows = "15" } )
					<span class="littleHelp">Copy and paste any content from your email including Name and contact info for the requestor here.</span></td>
				</tr>
				<tr>
					<td style="height:10px">@Html.CheckBoxFor( m => m.NeedDWGFiles, new { @class = "chkFilesNeeded" } ) @Html.MJLabelFor( m => m.NeedDWGFiles, false )</td>
				</tr>
				<tr>
					<td style="height:10px">@Html.CheckBoxFor( m => m.NeedSP4Files, new { @class = "chkFilesNeeded" } ) @Html.MJLabelFor( m => m.NeedSP4Files, false )</td>
				</tr>
				<tr>
					<td style="height:10px">@Html.CheckBoxFor( m => m.NeedSIFFiles, new { @class = "chkFilesNeeded" } ) @Html.MJLabelFor( m => m.NeedSIFFiles, false )</td>
				</tr>
				<tr>
					<td style="height:10px">@Html.CheckBoxFor( m => m.NeedXLSFiles, new { @class = "chkFilesNeeded" } ) @Html.MJLabelFor( m => m.NeedXLSFiles, false )</td>
				</tr>
				<tr>
					<td>@Html.CheckBoxFor( m => m.NeedPDFFiles, new { @class = "chkFilesNeeded" } ) @Html.MJLabelFor( m => m.NeedPDFFiles, false )</td>
				</tr>
			</table>
		</div>
		<div class="futureSection requestPanel">
			<h3>Step @(stepNum++) of @stepCount: Project Requirements</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td width="200px">@Html.MJLabelFor( m => m.Casegoods, false )</td>
					<td width="200px">@Html.MJLabelFor( m => m.Conferencing, false )</td>
					<td width="200px">@Html.MJLabelFor( m => m.Seating, false )</td>
				</tr>
				<tr>
					<td>@for( int i = 0; i < ViewBag.BlankInformation.Casegoods.Count; i++ )
		 {
			 <input type="hidden" name="Casegoods.Index" value="@i" />
			 <input type="checkbox" name="Casegoods[@i]" value="@ViewBag.BlankInformation.Casegoods[i]" class="chkCasegoods" /> <label for="Casegoods[@i]">@ViewBag.BlankInformation.Casegoods[i]</label><br />
		 }</td>
					<td>@for( int i = 0; i < ViewBag.BlankInformation.Conferencing.Count; i++ )
		 {
			 <input type="hidden" name="Conferencing.Index" value="@i" />
			 <input type="checkbox" name="Conferencing[@i]" value="@ViewBag.BlankInformation.Conferencing[i]" class="chkConferencing" /> <label for="Conferencing[@i]">@ViewBag.BlankInformation.Conferencing[i]</label><br />
		 }</td>
					<td>@for( int i = 0; i < ( ViewBag.BlankInformation.Seating.Count + 1 ) / 2; i++ )
		 {
			 <input type="hidden" name="Seating.Index" value="@i" />
			 <input type="checkbox" name="Seating[@i]" value="@ViewBag.BlankInformation.Seating[i]" class="chkSeating" /> <label for="Seating[@i]">@ViewBag.BlankInformation.Seating[i]</label><br />
		 }</td>
					<td>@for( int i = ( ViewBag.BlankInformation.Seating.Count + 1 ) / 2; i < ViewBag.BlankInformation.Seating.Count; i++ )
		 {
			 <input type="hidden" name="Seating.Index" value="@i" />
			 <input type="checkbox" name="Seating[@i]" value="@ViewBag.BlankInformation.Seating[i]" class="chkSeating" /> <label for="Seating[@i]">@ViewBag.BlankInformation.Seating[i]</label><br />
		 }</td>
				</tr>
			</table>
			<hr class="cgcsOnly" />
			<table cellpadding="0" cellspacing="0" class="dataLayout cgcsOnly">
				<tr>
					<td>@Html.CheckBoxFor( m => m.Grommets ) @Html.MJLabelFor( m => m.Grommets, false )</td>
					<td class="grommetDetails" style="display:none">@Html.MJLabelFor( m => m.GrommetDetails, false )<span class="littleHelp">Please indicate number, location or other specifications.</span></td><td class="grommetDetails" style="display:none">@Html.TextAreaFor( m => m.GrommetDetails )</td>
				</tr>
				<tr class="grommetDetails" style="display:none">
					<td></td>
					<td>@Html.MJLabelFor( m => m.GrommetPosition, false )</td><td>@Html.TextAreaFor( m => m.GrommetPosition )</td>
				</tr>
			</table>
			<hr class="drawerOptions" />
			<table cellpadding="0" cellspacing="0" class="dataLayout drawerOptions">
				<tr>
					<td>
			@Html.MJLabelFor( m => m.DrawerOption, false )</td><td>
			@Html.DropDownListFor( m => m.DrawerOption, new List<SelectListItem>() { 
	new SelectListItem() { Text = "Vinyl Wrap", Value = "Vinyl Wrap" }, 
	new SelectListItem() { Text = "Wood", Value = "Wood" } } )
					</td>
				</tr>
			</table>
			<hr class="cgcsOnly" />
			<table cellpadding="0" cellspacing="0" class="dataLayout cgcsOnly">
				<tr>
					<td>@Html.MJLabelFor( m => m.Finishes, false )<br />
					@for( int i = 0; i < ViewBag.BlankInformation.Finishes.Count; i++ )
	 {
			 <input type="hidden" name="Finishes.Index" value="@i" />
			 <input type="checkbox" name="Finishes[@i]" value="@ViewBag.BlankInformation.Finishes[i]" class="chkFinish" /> <label for="Finishes[@i]">@ViewBag.BlankInformation.Finishes[i]</label><br />
	 }
					</td>
					<td colspan="2" class="double">
					<br />
					@Html.MJLabelFor( m => m.LaminatePreference, true, new { @class = "laminatePreference" } ) @Html.DropDownListFor( m => m.LaminatePreference, new List<SelectListItem>() { 
	new SelectListItem(),
	new SelectListItem() { Value = "LPL", Text = "LPL - Low Pressure Laminate" },
	new SelectListItem() { Value = "HPL", Text = "HPL - High Pressure Laminate" } }, new { @class = "laminatePreference" } )<br class="laminatePreference" />
		 @Html.TextBoxFor( m => m.OtherFinishDetails )
	<span class="littleHelp">Please specify if you there is a combination of finishes required by top vs. base, etc. Please include all appropriate detail of the user preference.</span>
					</td>
				</tr>
			</table>
			<hr class="forFabric" />
			<table cellpadding="0" cellspacing="0" class="dataLayout forFabric">
				<tr>
					<td>
			@Html.MJLabelFor( m => m.FabricGrade, false )</td><td>
			@Html.DropDownListFor( m => m.FabricGrade, new List<SelectListItem>() { 
	new SelectListItem() { Text = "A", Value = "A" },
	new SelectListItem() { Text = "B", Value = "B" },
	new SelectListItem() { Text = "C", Value = "C" },
	new SelectListItem() { Text = "D", Value = "D" },
	new SelectListItem() { Text = "E", Value = "E" },
	new SelectListItem() { Text = "F", Value = "F" }, 
	new SelectListItem() { Text = "G", Value = "G" },
	new SelectListItem() { Text = "H", Value = "H" },
	new SelectListItem() { Text = "I", Value = "I" },
	new SelectListItem() { Text = "J", Value = "J" },
	new SelectListItem() { Text = "K", Value = "K" },
	new SelectListItem() { Text = "L", Value = "L" },
	new SelectListItem() { Text = "M", Value = "M" }  
} )
					</td>
				</tr><tr>
					<td>
					@Html.MJLabelFor( m => m.Fabric, false )</td><td>
					@Html.TextBoxFor( m => m.Fabric )
					<span class="littleHelp">Please specify the exact fabric code if you know what the user wants specified for pricing purposes.</span>
					</td>
				</tr>
			</table>
		</div>
		<div class="futureSection requestPanel">
			<h3>Step @(stepNum++) of @stepCount: Specials</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout">
				<tr>
					<td>@Html.MJLabelFor( m => m.SpecialRequests, true )</td><td class="triple">@Html.TextAreaFor( m => m.SpecialRequests, new { @rows = "15" } )</td>
				</tr>
				<tr>
				<td></td><td class="triple"><span class="littleHelp">Please provide any additional information you may have regarding edge profile, finish, pulls, drawer options and grommets, etc.</span></td>
				</tr>
			</table>
		</div>
		<div class="futureSection requestPanel">
			<h3>Step @(stepNum++) of @stepCount: Confirm</h3>
			<table cellpadding="0" cellspacing="0" class="dataLayout" id="confirmTable">
			<thead>
			<tr>
			<td width="300px"></td><td></td>
			</tr>
			</thead>
			<tbody>
			</tbody>
			</table>
		</div>
		<hr />
		<div>
			<div class="left">
				<input type="button" class="btn_type1 previousBtn" value="Previous" id="" style="display:none;" />
			</div>
			<div class="right">
				<input type="button" class="btn_type1 cancelBtn" value="Cancel" />
				<input type="button" class="btn_type1 nextBtn" value="Next" id="" />
				<input type="submit" class="btn_type1 submitBtn" value="Submit Request" id="" style="display:none;" />
			</div>
			<div class="clear"></div>
		</div>
	}