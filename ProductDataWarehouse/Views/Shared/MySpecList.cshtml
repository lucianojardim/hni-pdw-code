@using PDWInfrastructure
<h2>Spec Request List</h2>
@{ var bMinView = (ViewData["bMinView"] as bool?) ?? false; }
@if( !bMinView )
{
	if( PaoliWebUser.CurrentUser.CanAddSpecRequests )
	{
<a href="@Url.Action( "AddRequest", "SpecRequest" )" id="addNewRequest">Add New</a><br />
	}
}
<div>
    <table id="specRequestList">
    <thead></thead>
    <tfoot></tfoot>
    </table>
	<div class="right">
	@if( bMinView )
 {
	 if( PaoliWebUser.CurrentUser.CanManageTypicals )
	 {
	<a href="@Url.Action( "Manage", "SpecRequest" )">Manage</a>
	 }
	 else
	 {
	<a href="@Url.Action( "ViewAll", "SpecRequest" )">View All</a>
	 }
 }
	</div>
</div>
@{
	var colNum = 0;
}
<script type="text/javascript">
	$(document).ready(function () {
		loadSpecRequests();
	});

	var oTable = null;
	function loadSpecRequests() {
		if (oTable != null) {
			oTable.fnDraw();
			return;
		}

		oTable = $('#specRequestList').dataTable({
			"bServerSide": true,
			"bAutoWidth": false,
			"bFilter": @(( !bMinView ).ToString().ToLower()),
			"bLengthChange": false, // don't show dropdown for #items per page
			"bPaginate": @(( !bMinView ).ToString().ToLower()),
			"bInfo": @(( !bMinView ).ToString().ToLower()),
			"bSort": @(( !bMinView ).ToString().ToLower()),
			"sAjaxSource": '@Url.Action( "UserRequestList", "SpecRequest" )',
			"fnServerParams": function (aoData) {
				aoData.push({ "name": "bMinView", "value": "@(bMinView)" });
			},
			"iDisplayLength": 100,
			"oLanguage": {
				"sSearch": "Filter by Keyword:"
			},
			"fnServerData": function (sSource, aoData, fnCallback) {
				$.ajax({
					dataType: 'json',
					type: "POST",
					url: sSource,
					data: aoData,
					success: function (data, textStatus, jqXHR) {
						fnCallback(data, textStatus, jqXHR);
					},
					error: function (jqXHR, textStatus, errorThrown) { alert('Error getting list of Requests:' + errorThrown) }
				})
			},
			"bProcessing": false, // don't want to use the default progress indicator at this time
			"aoColumnDefs": [
                    { "sName": "Name", "sTitle": "Name", "aTargets": [@(colNum++)], "mDataProp": "Name", "sWidth": "9%",
                    	"fnRender": function (oObj) {
                    		var s = '<a href=\"@Url.Action( "ViewRequest", "SpecRequest" )/' + oObj.aData["RequestID"] + '\" class="fbImageBtn">';
                   			s += oObj.aData["Name"];
                    		s += '</a>';

							return s;
                    	}
 },
			@if( !PaoliWebUser.CurrentUser.IsDealerUser && !PaoliWebUser.CurrentUser.IsInRole( PaoliWebUser.PaoliWebRole.PaoliSalesRep ) )
   {
	<text>
                    { "sName": "SalesRepGroup", "sTitle": "Rep Group", "aTargets": [@(colNum++)], "mDataProp": "SalesRepGroup", "sWidth": "27%" },
	</text>
   }
	@if( !PaoliWebUser.CurrentUser.IsDealerUser )
 {
	<text>
                    { "sName": "Dealer", "sTitle": "Dealer", "aTargets": [@(colNum++)], "mDataProp": "Dealer", "sWidth": "27%" },
	</text>
 }
                    { "sName": "ProjectName", "sTitle": "Project Name", "aTargets": [@(colNum++)], "mDataProp": "ProjectName", "sWidth": "27%" },
                    { "sName": "Status",
                    	"aTargets": [@(colNum)],
                    	"bSearchable": false,
                    	"bSortable": true,
                    	"mDataProp": "Status", "sTitle": "Status", "sWidth": "10%",
                    	"fnRender": function (oObj) {
							if (oObj.aData["IsCompleted"]) {
                    			return 'Completed';
                    		} 
                    		return 'Pending';
                    	}
                    }
                ],
			"aaSorting": [[@(colNum), "desc"]]
		});
	}

</script>